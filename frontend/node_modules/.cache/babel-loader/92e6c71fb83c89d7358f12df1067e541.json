{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\klose\\\\workspace\\\\myfishing\\\\frontend\\\\src\\\\page\\\\diary\\\\diaryEntry.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { MFInput } from 'component/column/input/mf_input';\nimport { MFPicklist } from 'component/column/input/mf_picklist';\nimport { MFMultiPicklist } from 'component/column/input/mf_multipicklist';\nimport { MFTextarea } from 'component/column/input/mf_textarea';\nimport { MFButton } from 'component/button/mf_button';\nimport { isDateForInput } from 'component/column/columnDef';\nimport { textColumns, numberColumns, picklistColumns, multiPicklistColumns, textareaColumns, dateColumns } from 'component/column/columns';\nimport styled from \"styled-components\";\nimport { StyledWrapper, StyledOuter } from 'commonCSS/style'; // import { testData } from 'testData'\n\nimport { order } from 'page/diary/dialyColumnOrder';\nimport { ModalSppiner } from 'component/spinner/modalSpinner';\nimport { useNavigate } from 'react-router-dom';\nimport { formatDate, DateFormat } from 'utils/format/formatDate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DiaryEntry = () => {\n  _s();\n\n  // 各項目のuseStateを宣言\n  const [date, setDate] = useState(formatDate(new Date(), DateFormat.YYYY_MM_DD));\n  const [place, setPlace] = useState('');\n  const [caughtFish, setCaughtFish] = useState(['']);\n  const [comment, setComment] = useState('');\n  const [rod, setRod] = useState(['']);\n  const [method, setMethod] = useState(['']);\n  const [lure, setLure] = useState(['']);\n  const [weather, setWeather] = useState('');\n  const [wind, setWind] = useState(0);\n  const [tide, setTide] = useState('');\n  const [orderedColumns, setOrderedColumns] = useState();\n  const [isLoad, setIsLoad] = useState(false);\n  const navigate = useNavigate(); // URLパラメータからid値を取得する\n  // 取得値がidの正規表現に合致しない場合は新規レコード作成画面とみなす\n  // ページ初期化\n\n  useEffect(() => {\n    (async () => {\n      console.log('useEffect start'); // 項目定義情報の取得\n\n      const columns = [...textColumns, ...numberColumns, ...dateColumns, ...picklistColumns, ...multiPicklistColumns, ...textareaColumns]; // ここから編集時のみの処理\n      // サーバーから初期値を取得 await\n      // サーバーからの値をrecordに注入\n      // for(let c of columns){\n      //     if(testData[c.id]) c.value = testData[c.id];\n      // }\n      // 初期値を各stateにセット\n      // setPlace(testData.place ?? '');\n      // setCaughtFish(testData.caughtFish ?? []);\n      // setComment(testData.comment ?? '');\n      // setRod(testData.rod ?? []);\n      // setMethod(testData.method ?? []);\n      // setLure(testData.lure ?? []);\n      // setWeather(testData.weather ?? '');\n      // setWind(testData.wind ?? 0);\n      // setTide(testData.tide ?? '');\n      //ここまで編集時のみの処理\n      // columnOrderの順に項目の並び替え\n\n      injectHandleChange(columns);\n      setOrderedColumns(sortColumns(order, columns));\n      console.log(orderedColumns);\n    })();\n  }, []);\n\n  const sortColumns = (order, columns) => {\n    const result = [];\n\n    for (let o of order) {\n      for (let c of columns) {\n        if (c.id === o) {\n          result.push(c);\n          break;\n        }\n      }\n    }\n\n    return result;\n  };\n\n  const injectHandleChange = columns => {\n    for (let c of columns) {\n      if (c.id === 'date') c.handleChange = setDate;\n      if (c.id === 'place') c.handleChange = setPlace;\n      if (c.id === 'caughtFish') c.handleChange = setCaughtFish;\n      if (c.id === 'comment') c.handleChange = setComment;\n      if (c.id === 'rod') c.handleChange = setRod;\n      if (c.id === 'method') c.handleChange = setMethod;\n      if (c.id === 'lure') c.handleChange = setLure;\n      if (c.id === 'weather') c.handleChange = setWeather;\n      if (c.id === 'wind') c.handleChange = setWind;\n      if (c.id === 'tide') c.handleChange = setTide;\n    }\n  };\n\n  const submit = async e => {\n    console.log('★submit★');\n    setIsLoad(true);\n    e.preventDefault();\n    const data = {\n      date: isDateForInput(date) ? date : undefined,\n      place: place,\n      caughtFish: caughtFish,\n      comment: comment,\n      rod: rod,\n      method: method,\n      lure: lure,\n      weather: weather,\n      wind: wind,\n      tide: tide\n    };\n    console.log('data');\n    console.log(data);\n    navigate('/view', {\n      state: {\n        id: 1\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledOuter, {\n    children: [isLoad && /*#__PURE__*/_jsxDEV(ModalSppiner, {\n      height: 100,\n      width: 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(StyledWrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        onSubmit: submit,\n        children: [/*#__PURE__*/_jsxDEV(StyledContainer, {\n          children: orderedColumns === null || orderedColumns === void 0 ? void 0 : orderedColumns.map(oc => {\n            if (isInput(oc)) {\n              console.log(oc.value);\n              return /*#__PURE__*/_jsxDEV(MFInput, {\n                label: oc.label,\n                id: oc.id,\n                input: oc.input,\n                value: oc.value,\n                handleChange: oc.handleChange\n              }, oc.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 44\n              }, this);\n            } else if (isPickList(oc)) {\n              console.log(oc.value);\n              return /*#__PURE__*/_jsxDEV(MFPicklist, {\n                label: oc.label,\n                id: oc.id,\n                select: oc.select,\n                options: oc.options,\n                value: oc.value,\n                handleChange: oc.handleChange\n              }, oc.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 44\n              }, this);\n            } else if (isMultiPickList(oc)) {\n              console.log(oc.value);\n              return /*#__PURE__*/_jsxDEV(MFMultiPicklist, {\n                label: oc.label,\n                id: oc.id,\n                select: oc.select,\n                options: oc.options,\n                value: oc.value,\n                handleChange: oc.handleChange\n              }, oc.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 44\n              }, this);\n            } else if (isTextarea(oc)) {\n              return /*#__PURE__*/_jsxDEV(MFTextarea, {\n                label: oc.label,\n                id: oc.id,\n                textarea: oc.textarea,\n                value: oc.value,\n                handleChange: oc.handleChange\n              }, oc.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 44\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StyledButtonWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(StyledButtonContainer, {\n            children: /*#__PURE__*/_jsxDEV(MFButton, {\n              type: 'submit',\n              disabled: false,\n              mode: 'positive',\n              hidden: false,\n              children: \"\\u4FDD\\u5B58\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(StyledButtonContainer, {\n            children: /*#__PURE__*/_jsxDEV(MFButton, {\n              type: 'button',\n              disabled: false,\n              mode: 'negative',\n              hidden: false,\n              children: \"\\u623B\\u308B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DiaryEntry, \"c1WN9yp/0DKr7EZ4cVVJKBuov5Y=\", false, function () {\n  return [useNavigate];\n});\n\n_c = DiaryEntry;\n\nconst isInput = column => column.type === 'input';\n\nconst isPickList = column => column.type === 'picklist';\n\nconst isMultiPickList = column => column.type === 'multipicklist';\n\nconst isTextarea = column => column.type === 'textarea';\n\nconst StyledContainer = styled.div`\ndisplay: grid;\npadding-top: 100px;\ngrid-auto-rows: 150px;\ngrid-template-columns: 50% 50%;\n`;\n_c2 = StyledContainer;\nconst StyledButtonWrapper = styled.div`\nwidth: 30%;\nmargin: 0 auto;\nheight: 150px;\nalign-items: center;\njustify-content: center;\ndisplay: flex;\nz-index: 0;\n`;\n_c3 = StyledButtonWrapper;\nconst StyledButtonContainer = styled.div`\nmargin: 0 10%;\n`;\n_c4 = StyledButtonContainer;\nexport default DiaryEntry;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"DiaryEntry\");\n$RefreshReg$(_c2, \"StyledContainer\");\n$RefreshReg$(_c3, \"StyledButtonWrapper\");\n$RefreshReg$(_c4, \"StyledButtonContainer\");","map":{"version":3,"sources":["C:/Users/klose/workspace/myfishing/frontend/src/page/diary/diaryEntry.tsx"],"names":["useEffect","useState","MFInput","MFPicklist","MFMultiPicklist","MFTextarea","MFButton","isDateForInput","textColumns","numberColumns","picklistColumns","multiPicklistColumns","textareaColumns","dateColumns","styled","StyledWrapper","StyledOuter","order","ModalSppiner","useNavigate","formatDate","DateFormat","DiaryEntry","date","setDate","Date","YYYY_MM_DD","place","setPlace","caughtFish","setCaughtFish","comment","setComment","rod","setRod","method","setMethod","lure","setLure","weather","setWeather","wind","setWind","tide","setTide","orderedColumns","setOrderedColumns","isLoad","setIsLoad","navigate","console","log","columns","injectHandleChange","sortColumns","result","o","c","id","push","handleChange","submit","e","preventDefault","data","undefined","state","map","oc","isInput","value","label","input","isPickList","select","options","isMultiPickList","isTextarea","textarea","column","type","StyledContainer","div","StyledButtonWrapper","StyledButtonContainer"],"mappings":"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","sourcesContent":["import { useEffect, useState, VFC, SyntheticEvent } from 'react';\r\nimport { MFInput } from 'component/column/input/mf_input';\r\nimport { MFPicklist } from 'component/column/input/mf_picklist';\r\nimport { MFMultiPicklist } from 'component/column/input/mf_multipicklist';\r\nimport { MFTextarea } from 'component/column/input/mf_textarea';\r\nimport { MFButton } from 'component/button/mf_button';\r\nimport {\r\n    Column, \r\n    TextColumn, \r\n    NumberColumn, \r\n    PicklistColumn, \r\n    MultiPicklistColumn, \r\n    TextareaColumn, \r\n    isDateForInput,\r\n    DateForInput,\r\n} from 'component/column/columnDef';\r\nimport {\r\n    textColumns, \r\n    numberColumns,\r\n    picklistColumns,\r\n    multiPicklistColumns,\r\n    textareaColumns,\r\n    dateColumns\r\n} from 'component/column/columns';\r\nimport styled from \"styled-components\";\r\nimport { StyledWrapper, StyledOuter } from 'commonCSS/style'\r\n// import { testData } from 'testData'\r\nimport { order } from 'page/diary/dialyColumnOrder'\r\nimport { ModalSppiner } from 'component/spinner/modalSpinner'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { formatDate, DateFormat } from 'utils/format/formatDate'\r\nimport { Diary } from 'dataType/diary'\r\n\r\n\r\nconst DiaryEntry: VFC = () => {\r\n    // 各項目のuseStateを宣言\r\n    const [date, setDate] = useState(formatDate(new Date(), DateFormat.YYYY_MM_DD));\r\n    const [place, setPlace] = useState('');\r\n    const [caughtFish, setCaughtFish] = useState(['']);\r\n    const [comment, setComment] = useState('');\r\n    const [rod, setRod] = useState(['']);\r\n    const [method, setMethod] = useState(['']);\r\n    const [lure, setLure] = useState(['']);\r\n    const [weather, setWeather] = useState('');\r\n    const [wind, setWind] = useState(0);\r\n    const [tide, setTide] = useState('');\r\n\r\n    const [orderedColumns, setOrderedColumns] = useState<Column[]>();\r\n    const [isLoad, setIsLoad] = useState<boolean>(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // URLパラメータからid値を取得する\r\n    // 取得値がidの正規表現に合致しない場合は新規レコード作成画面とみなす\r\n\r\n    // ページ初期化\r\n    useEffect(()=> {       \r\n        (\r\n            async () => {\r\n                console.log('useEffect start');\r\n                // 項目定義情報の取得\r\n                const columns: Column[] = [...textColumns, ...numberColumns, ...dateColumns, ...picklistColumns, ...multiPicklistColumns, ...textareaColumns];\r\n            \r\n                // ここから編集時のみの処理\r\n                    // サーバーから初期値を取得 await\r\n\r\n                    // サーバーからの値をrecordに注入\r\n                    // for(let c of columns){\r\n                    //     if(testData[c.id]) c.value = testData[c.id];\r\n                    // }\r\n\r\n                    // 初期値を各stateにセット\r\n                    // setPlace(testData.place ?? '');\r\n                    // setCaughtFish(testData.caughtFish ?? []);\r\n                    // setComment(testData.comment ?? '');\r\n                    // setRod(testData.rod ?? []);\r\n                    // setMethod(testData.method ?? []);\r\n                    // setLure(testData.lure ?? []);\r\n                    // setWeather(testData.weather ?? '');\r\n                    // setWind(testData.wind ?? 0);\r\n                    // setTide(testData.tide ?? '');\r\n                //ここまで編集時のみの処理\r\n                \r\n                // columnOrderの順に項目の並び替え\r\n                injectHandleChange(columns);\r\n                setOrderedColumns(sortColumns(order, columns));\r\n                console.log(orderedColumns);\r\n            })()\r\n    },[])\r\n        \r\n    const sortColumns = (order:string[], columns:Column[]):Column[] => {\r\n        const result: Column[] = [];\r\n        \r\n        for( let o of order ){\r\n            for(let c of columns){\r\n                if(c.id === o){\r\n                    result.push(c);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const injectHandleChange = (columns:Column[]):void => {\r\n        for(let c of columns){\r\n            if(c.id === 'date') c.handleChange = setDate;\r\n            if(c.id === 'place') c.handleChange = setPlace;\r\n            if(c.id === 'caughtFish') c.handleChange = setCaughtFish;\r\n            if(c.id === 'comment') c.handleChange = setComment;\r\n            if(c.id === 'rod') c.handleChange = setRod;\r\n            if(c.id === 'method') c.handleChange = setMethod;\r\n            if(c.id === 'lure') c.handleChange = setLure;\r\n            if(c.id === 'weather') c.handleChange = setWeather;\r\n            if(c.id === 'wind') c.handleChange = setWind;\r\n            if(c.id === 'tide') c.handleChange = setTide;\r\n        }\r\n    }\r\n    \r\n    const submit =async (e: SyntheticEvent)=> {\r\n        console.log('★submit★');\r\n        setIsLoad(true);\r\n        e.preventDefault();\r\n        const data: Diary = {\r\n            date: (isDateForInput(date)) ? date : undefined ,\r\n            place: place,\r\n            caughtFish: caughtFish,\r\n            comment: comment,\r\n            rod: rod,\r\n            method: method,\r\n            lure: lure,\r\n            weather: weather,\r\n            wind: wind,\r\n            tide: tide\r\n        }\r\n        console.log('data');\r\n        console.log(data);\r\n        navigate('/view', { state: { id:1 }});\r\n    }\r\n\r\n\r\n    return (\r\n        <StyledOuter>\r\n            {isLoad && <ModalSppiner height={100} width={100} />}\r\n            <StyledWrapper>\r\n                <form method=\"post\" onSubmit={ submit } >\r\n                    <StyledContainer>\r\n                            {orderedColumns?.map((oc)=>{\r\n                                if(isInput(oc)){\r\n                                    console.log(oc.value);\r\n                                    return <MFInput\r\n                                        label={oc.label}\r\n                                        id={oc.id}\r\n                                        input={oc.input}\r\n                                        key={oc.id}\r\n                                        value={oc.value}\r\n                                        handleChange={oc.handleChange}></MFInput>\r\n                                }else if(isPickList(oc)){\r\n                                    console.log(oc.value);\r\n                                    return <MFPicklist\r\n                                        label={oc.label}\r\n                                        id={oc.id}\r\n                                        select={oc.select}\r\n                                        options={oc.options}\r\n                                        key={oc.id}\r\n                                        value={oc.value}\r\n                                        handleChange={oc.handleChange}></MFPicklist>\r\n                                }else if(isMultiPickList(oc)){\r\n                                    console.log(oc.value);\r\n                                    return <MFMultiPicklist\r\n                                        label={oc.label}\r\n                                        id={oc.id}\r\n                                        select={oc.select}\r\n                                        options={oc.options}\r\n                                        key={oc.id}\r\n                                        value={oc.value}\r\n                                        handleChange={oc.handleChange}></MFMultiPicklist>\r\n                                }else if(isTextarea(oc)){\r\n                                    return <MFTextarea\r\n                                        label={oc.label}\r\n                                        id={oc.id}\r\n                                        textarea={oc.textarea}\r\n                                        key={oc.id}\r\n                                        value={oc.value}\r\n                                        handleChange={oc.handleChange}></MFTextarea>\r\n                                }\r\n                            })}\r\n                    </StyledContainer>\r\n                <StyledButtonWrapper>\r\n                    <StyledButtonContainer>\r\n                        <MFButton type={'submit'} disabled={false} mode={'positive'} hidden={false} >保存</MFButton>\r\n                    </StyledButtonContainer>\r\n                    <StyledButtonContainer>\r\n                        <MFButton type={'button'} disabled={false} mode={'negative'} hidden={false} >戻る</MFButton>\r\n                    </StyledButtonContainer>\r\n                </StyledButtonWrapper>\r\n                </form>\r\n            </StyledWrapper>\r\n        </StyledOuter>\r\n    )\r\n}\r\n\r\n\r\nconst isInput = (column: Column): column is (TextColumn | NumberColumn) => column.type === 'input';\r\nconst isPickList = (column: Column): column is PicklistColumn => column.type === 'picklist';\r\nconst isMultiPickList = (column: Column): column is MultiPicklistColumn => column.type === 'multipicklist';\r\nconst isTextarea = (column: Column): column is TextareaColumn => column.type === 'textarea';\r\n\r\nconst StyledContainer =styled.div`\r\ndisplay: grid;\r\npadding-top: 100px;\r\ngrid-auto-rows: 150px;\r\ngrid-template-columns: 50% 50%;\r\n`;\r\n\r\nconst StyledButtonWrapper =styled.div`\r\nwidth: 30%;\r\nmargin: 0 auto;\r\nheight: 150px;\r\nalign-items: center;\r\njustify-content: center;\r\ndisplay: flex;\r\nz-index: 0;\r\n`;\r\n\r\nconst StyledButtonContainer =styled.div`\r\nmargin: 0 10%;\r\n`;\r\n\r\nexport default DiaryEntry;"]},"metadata":{},"sourceType":"module"}