{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\klose\\\\workspace\\\\myfishing\\\\src\\\\page\\\\form\\\\recordEntryForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { MFInput } from 'component/column/mf_input';\nimport { MFPicklist } from 'component/column/mf_picklist';\nimport { MFMultiPicklist } from 'component/column/mf_multipicklist';\nimport { MFTextarea } from 'component/column/mf_textarea';\nimport { MFButton } from 'component/button/mf_button';\nimport { textColumns, numberColumns, picklistColumns, multiPicklistColumns, textareaColumns } from 'component/column/columns';\nimport styled from \"styled-components\";\nimport { StyledWrapper, StyledOuter } from 'component/commonCSS/style';\nimport { testData } from 'testData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecordEntryForm = () => {\n  _s();\n\n  // 各項目のuseStateを宣言\n  const [place, setPlace] = useState('');\n  const [caughtFish, setCaughtFIsh] = useState(['']);\n  const [comment, setComment] = useState('');\n  const [rod, setRod] = useState(['']);\n  const [method, setMethod] = useState(['']);\n  const [lure, setLure] = useState(['']);\n  const [weather, setWeather] = useState('');\n  const [wind, setWind] = useState(0);\n  const [tide, setTide] = useState('');\n  const record = [{\n    id: 'place',\n    value: '',\n    handleChange: setPlace\n  }, {\n    id: 'caughtFish',\n    value: '',\n    handleChange: setCaughtFIsh\n  }, {\n    id: 'comment',\n    value: '',\n    handleChange: setComment\n  }, {\n    id: 'rod',\n    value: '',\n    handleChange: setRod\n  }, {\n    id: 'method',\n    value: '',\n    handleChange: setMethod\n  }, {\n    id: 'lure',\n    value: '',\n    handleChange: setLure\n  }, {\n    id: 'weather',\n    value: '',\n    handleChange: setWeather\n  }, {\n    id: 'wind',\n    value: 0,\n    handleChange: setWind\n  }, {\n    id: 'tide',\n    value: '',\n    handleChange: setTide\n  }];\n  const [orderedColumns, setOrderedColumns] = useState(); // const orderedColumns = useRef<Column[]>(); これだと初期化処理内でcurrentに値を入れてもうまく項目が表示されない\n  // ページ初期化\n\n  useEffect(() => {\n    (async () => {\n      console.log('useEffect start'); // 項目定義情報の取得\n\n      const columns = [...textColumns, ...numberColumns, ...picklistColumns, ...multiPicklistColumns, ...textareaColumns]; // サーバーから初期値を取得 await\n      // サーバーからの値をrecordに注入\n\n      for (let r of record) {\n        if (r.id === 'place') r.value = testData.place;\n        if (r.id === 'caughtFish') r.value = testData.caughtFish;\n        if (r.id === 'comment') r.value = testData.comment;\n        if (r.id === 'rod') r.value = testData.rod;\n        if (r.id === 'method') r.value = testData.method;\n        if (r.id === 'lure') r.value = testData.lure;\n        if (r.id === 'weather') r.value = testData.weather;\n        if (r.id === 'wind') r.value = testData.wind;\n        if (r.id === 'tide') r.value = testData.tide;\n      } // 初期値を各stateにセット\n\n\n      setPlace(testData.place);\n      setCaughtFIsh(testData.caughtFish);\n      setComment(testData.comment);\n      setRod(testData.rod);\n      setMethod(testData.method);\n      setLure(testData.lure);\n      setWeather(testData.weather);\n      setWind(testData.wind);\n      setTide(testData.tide); // columnOrderの順に項目の並び替え\n\n      console.log('★record');\n      console.log(record);\n      setOrderedColumns(sortColumns(record, columns));\n      console.log(orderedColumns);\n    })();\n  }, []);\n\n  const submit = async e => {\n    console.log('★submit★');\n    e.preventDefault();\n    const data = {\n      place: place,\n      wind: wind,\n      caughtFish: caughtFish,\n      weather: weather,\n      comment: comment\n    };\n    console.log('data');\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledOuter, {\n    children: /*#__PURE__*/_jsxDEV(StyledWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        onSubmit: submit,\n        children: /*#__PURE__*/_jsxDEV(StyledContainer, {\n          children: orderedColumns === null || orderedColumns === void 0 ? void 0 : orderedColumns.map(oc => {\n            if (isInput(oc)) {\n              console.log(oc.value);\n              return /*#__PURE__*/_jsxDEV(MFInput, {\n                label: oc.label,\n                id: oc.id,\n                input: oc.input,\n                value: oc.value,\n                handleChange: oc.handleChange\n              }, oc.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 44\n              }, this);\n            } else if (isPickList(oc)) {\n              console.log(oc.value);\n              return /*#__PURE__*/_jsxDEV(MFPicklist, {\n                label: oc.label,\n                id: oc.id,\n                select: oc.select,\n                options: oc.options,\n                value: oc.value,\n                handleChange: oc.handleChange\n              }, oc.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 44\n              }, this);\n            } else if (isMultiPickList(oc)) {\n              console.log(oc.value);\n              return /*#__PURE__*/_jsxDEV(MFMultiPicklist, {\n                label: oc.label,\n                id: oc.id,\n                select: oc.select,\n                options: oc.options,\n                value: oc.value,\n                handleChange: oc.handleChange\n              }, oc.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 44\n              }, this);\n            } else if (isTextarea(oc)) {\n              return /*#__PURE__*/_jsxDEV(MFTextarea, {\n                label: oc.label,\n                id: oc.id,\n                textarea: oc.textarea,\n                value: oc.value,\n                handleChange: oc.handleChange\n              }, oc.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 44\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StyledButtonWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(StyledButtonContainer, {\n          children: /*#__PURE__*/_jsxDEV(MFButton, {\n            type: 'submit',\n            disabled: false,\n            mode: 'positive',\n            children: \"\\u4FDD\\u5B58\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(StyledButtonContainer, {\n          children: /*#__PURE__*/_jsxDEV(MFButton, {\n            type: 'button',\n            disabled: false,\n            mode: 'negative',\n            children: \"\\u623B\\u308B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RecordEntryForm, \"eeP4TefnOZ5xCfFh5JBwM4vmslI=\");\n\n_c = RecordEntryForm;\n\nconst sortColumns = (record, columns) => {\n  const orderedColumns = [];\n\n  for (let r of record) {\n    for (let c of columns) {\n      if (c.id === r.id) {\n        c.handleChange = r.handleChange;\n        c.value = r.value;\n        orderedColumns.push(c);\n        break;\n      }\n    }\n  }\n\n  return orderedColumns;\n};\n\nconst isInput = column => column.type === 'input';\n\nconst isPickList = column => column.type === 'picklist';\n\nconst isMultiPickList = column => column.type === 'multipicklist';\n\nconst isTextarea = column => column.type === 'textarea';\n\nconst StyledContainer = styled.div`\ndisplay: grid;\npadding-top: 100px;\ngrid-auto-rows: 150px;\ngrid-template-columns: 50% 50%;\n`;\n_c2 = StyledContainer;\nconst StyledButtonWrapper = styled.div`\nwidth: 30%;\nmargin: 0 auto;\nheight: 150px;\nalign-items: center;\njustify-content: center;\ndisplay: flex;\n`;\n_c3 = StyledButtonWrapper;\nconst StyledButtonContainer = styled.div`\nmargin: 0 10%;\n`;\n_c4 = StyledButtonContainer;\nexport default RecordEntryForm;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"RecordEntryForm\");\n$RefreshReg$(_c2, \"StyledContainer\");\n$RefreshReg$(_c3, \"StyledButtonWrapper\");\n$RefreshReg$(_c4, \"StyledButtonContainer\");","map":{"version":3,"sources":["C:/Users/klose/workspace/myfishing/src/page/form/recordEntryForm.tsx"],"names":["useEffect","useState","MFInput","MFPicklist","MFMultiPicklist","MFTextarea","MFButton","textColumns","numberColumns","picklistColumns","multiPicklistColumns","textareaColumns","styled","StyledWrapper","StyledOuter","testData","RecordEntryForm","place","setPlace","caughtFish","setCaughtFIsh","comment","setComment","rod","setRod","method","setMethod","lure","setLure","weather","setWeather","wind","setWind","tide","setTide","record","id","value","handleChange","orderedColumns","setOrderedColumns","console","log","columns","r","sortColumns","submit","e","preventDefault","data","map","oc","isInput","label","input","isPickList","select","options","isMultiPickList","isTextarea","textarea","c","push","column","type","StyledContainer","div","StyledButtonWrapper","StyledButtonContainer"],"mappings":"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","sourcesContent":["import { useEffect, useState, VFC, SyntheticEvent } from 'react';\r\nimport { MFInput } from 'component/column/mf_input';\r\nimport { MFPicklist } from 'component/column/mf_picklist';\r\nimport { MFMultiPicklist } from 'component/column/mf_multipicklist';\r\nimport { MFTextarea } from 'component/column/mf_textarea';\r\nimport { MFButton } from 'component/button/mf_button';\r\nimport {\r\n    Column, \r\n    TextColumn, \r\n    NumberColumn, \r\n    PicklistColumn, \r\n    MultiPicklistColumn, \r\n    TextareaColumn, \r\n    Record \r\n} from 'component/column/columnDef';\r\nimport {\r\n    textColumns, \r\n    numberColumns,\r\n    picklistColumns,\r\n    multiPicklistColumns,\r\n    textareaColumns\r\n} from 'component/column/columns';\r\nimport styled from \"styled-components\";\r\nimport { StyledWrapper, StyledOuter } from 'component/commonCSS/style'\r\nimport { testData } from 'testData'\r\n\r\nconst RecordEntryForm: VFC = () => {\r\n    // 各項目のuseStateを宣言\r\n    const [place, setPlace] = useState('');\r\n    const [caughtFish, setCaughtFIsh] = useState(['']);\r\n    const [comment, setComment] = useState('');\r\n    const [rod, setRod] = useState(['']);\r\n    const [method, setMethod] = useState(['']);\r\n    const [lure, setLure] = useState(['']);\r\n    const [weather, setWeather] = useState('');\r\n    const [wind, setWind] = useState(0);\r\n    const [tide, setTide] = useState('');\r\n\r\n    const record: Record[] = [\r\n        {\r\n            id: 'place',\r\n            value: '',\r\n            handleChange: setPlace,\r\n        },\r\n        {\r\n            id: 'caughtFish',\r\n            value: '',\r\n            handleChange: setCaughtFIsh,\r\n        },\r\n        {\r\n            id: 'comment',\r\n            value: '',\r\n            handleChange: setComment,\r\n        },\r\n        {\r\n            id: 'rod',\r\n            value: '',\r\n            handleChange: setRod,\r\n        },\r\n        {\r\n            id: 'method',\r\n            value: '',\r\n            handleChange: setMethod,\r\n        },\r\n        {\r\n            id: 'lure',\r\n            value: '',\r\n            handleChange: setLure,\r\n        },\r\n        {\r\n            id: 'weather',\r\n            value: '',\r\n            handleChange: setWeather,\r\n        },\r\n        {\r\n            id: 'wind',\r\n            value: 0,\r\n            handleChange: setWind,\r\n        },\r\n        {\r\n            id: 'tide',\r\n            value: '',\r\n            handleChange: setTide,\r\n        },\r\n    ]\r\n\r\n    const [orderedColumns, setOrderedColumns] = useState<Column[]>();\r\n    // const orderedColumns = useRef<Column[]>(); これだと初期化処理内でcurrentに値を入れてもうまく項目が表示されない\r\n\r\n    // ページ初期化\r\n    useEffect(()=> {       \r\n        (\r\n            async () => {\r\n                console.log('useEffect start');\r\n                // 項目定義情報の取得\r\n                const columns: Column[] = [...textColumns, ...numberColumns, ...picklistColumns, ...multiPicklistColumns, ...textareaColumns];\r\n            \r\n                // サーバーから初期値を取得 await\r\n\r\n                // サーバーからの値をrecordに注入\r\n                for(let r of record){\r\n                    if(r.id === 'place') r.value = testData.place;\r\n                    if(r.id === 'caughtFish') r.value = testData.caughtFish;\r\n                    if(r.id === 'comment') r.value = testData.comment;\r\n                    if(r.id === 'rod') r.value = testData.rod;\r\n                    if(r.id === 'method') r.value = testData.method;\r\n                    if(r.id === 'lure') r.value = testData.lure;\r\n                    if(r.id === 'weather') r.value = testData.weather;\r\n                    if(r.id === 'wind') r.value = testData.wind;\r\n                    if(r.id === 'tide') r.value = testData.tide;\r\n                }\r\n\r\n                // 初期値を各stateにセット\r\n                setPlace(testData.place);\r\n                setCaughtFIsh(testData.caughtFish);\r\n                setComment(testData.comment);\r\n                setRod(testData.rod);\r\n                setMethod(testData.method);\r\n                setLure(testData.lure);\r\n                setWeather(testData.weather);\r\n                setWind(testData.wind);\r\n                setTide(testData.tide);\r\n                \r\n                // columnOrderの順に項目の並び替え\r\n                console.log('★record');\r\n                console.log(record);\r\n                setOrderedColumns(sortColumns(record, columns));\r\n                console.log(orderedColumns);\r\n            })()\r\n        }\r\n    ,[])\r\n    \r\n    const submit =async (e: SyntheticEvent)=> {\r\n        console.log('★submit★');\r\n        e.preventDefault();\r\n        const data = {\r\n            place: place,\r\n            wind: wind,\r\n            caughtFish: caughtFish,\r\n            weather: weather,\r\n            comment: comment,\r\n        }\r\n        console.log('data');\r\n        console.log(data);\r\n    }\r\n\r\n    return (\r\n        <StyledOuter>\r\n            <StyledWrapper>\r\n                <form method=\"post\" onSubmit={ submit } >\r\n                    <StyledContainer>\r\n                            {orderedColumns?.map((oc)=>{\r\n                                if(isInput(oc)){\r\n                                    console.log(oc.value);\r\n                                    return <MFInput\r\n                                                label={oc.label}\r\n                                                id={oc.id}\r\n                                                input={oc.input}\r\n                                                key={oc.id}\r\n                                                value={oc.value}\r\n                                                handleChange={oc.handleChange}></MFInput>\r\n                                }else if(isPickList(oc)){\r\n                                    console.log(oc.value);\r\n                                    return <MFPicklist\r\n                                                label={oc.label}\r\n                                                id={oc.id}\r\n                                                select={oc.select}\r\n                                                options={oc.options}\r\n                                                key={oc.id}\r\n                                                value={oc.value}\r\n                                                handleChange={oc.handleChange}></MFPicklist>\r\n                                }else if(isMultiPickList(oc)){\r\n                                    console.log(oc.value);\r\n                                    return <MFMultiPicklist\r\n                                                label={oc.label}\r\n                                                id={oc.id}\r\n                                                select={oc.select}\r\n                                                options={oc.options}\r\n                                                key={oc.id}\r\n                                                value={oc.value}\r\n                                                handleChange={oc.handleChange}></MFMultiPicklist>\r\n                                }else if(isTextarea(oc)){\r\n                                    return <MFTextarea\r\n                                                label={oc.label}\r\n                                                id={oc.id}\r\n                                                textarea={oc.textarea}\r\n                                                key={oc.id}\r\n                                                value={oc.value}\r\n                                                handleChange={oc.handleChange}></MFTextarea>\r\n                                }\r\n                            })}\r\n                    </StyledContainer>\r\n                </form>\r\n                    <StyledButtonWrapper>\r\n                        <StyledButtonContainer>\r\n                            <MFButton type={'submit'} disabled={false} mode={'positive'}>保存</MFButton>\r\n                        </StyledButtonContainer>\r\n                        <StyledButtonContainer>\r\n                            <MFButton type={'button'} disabled={false} mode={'negative'}>戻る</MFButton>\r\n                        </StyledButtonContainer>\r\n                    </StyledButtonWrapper>\r\n            </StyledWrapper>\r\n        </StyledOuter>\r\n    )\r\n}\r\n\r\nconst sortColumns = (record:Record[], columns:Column[]):Column[] => {\r\n    const orderedColumns: Column[] = [];\r\n    \r\n    for( let r of record ){\r\n        for(let c of columns){\r\n            if(c.id === r.id){\r\n                c.handleChange = r.handleChange;\r\n                c.value = r.value;\r\n                orderedColumns.push(c);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return orderedColumns;\r\n}\r\n\r\nconst isInput = (column: Column): column is (TextColumn | NumberColumn) => column.type === 'input';\r\nconst isPickList = (column: Column): column is PicklistColumn => column.type === 'picklist';\r\nconst isMultiPickList = (column: Column): column is MultiPicklistColumn => column.type === 'multipicklist';\r\nconst isTextarea = (column: Column): column is TextareaColumn => column.type === 'textarea';\r\n\r\nconst StyledContainer =styled.div`\r\ndisplay: grid;\r\npadding-top: 100px;\r\ngrid-auto-rows: 150px;\r\ngrid-template-columns: 50% 50%;\r\n`;\r\n\r\nconst StyledButtonWrapper =styled.div`\r\nwidth: 30%;\r\nmargin: 0 auto;\r\nheight: 150px;\r\nalign-items: center;\r\njustify-content: center;\r\ndisplay: flex;\r\n`;\r\n\r\nconst StyledButtonContainer =styled.div`\r\nmargin: 0 10%;\r\n`;\r\n\r\nexport default RecordEntryForm;"]},"metadata":{},"sourceType":"module"}