{"ast":null,"code":"export const isDateForInput = value => {\n  return /^[0-9]{4}\\-(0[1-9]|1[0-2])\\-(0[1-9]|[12][0-9]|3[01])$/.test(value);\n};","map":{"version":3,"sources":["C:/Users/klose/workspace/myfishing/frontend/src/component/column/columnDef.ts"],"names":["isDateForInput","value","test"],"mappings":"AA6EA,OAAO,MAAMA,cAAc,GAAIC,KAAD,IAA0C;AACpE,SAAO,wDAAwDC,IAAxD,CAA6DD,KAA7D,CAAP;AACH,CAFM","sourcesContent":["import { Options, MultiOptions } from 'component/column/input/pickListValueDef'\r\nimport { DiaryId } from 'dataType/diary'\r\n\r\nexport type ValueType = string | string[] | number | DateForInput\r\nexport type BaseColumnProps = {\r\n    label: string,\r\n    id: ColumnId,\r\n    value?: ValueType,\r\n}\r\n\r\nexport type Picklist = {\r\n    select: {\r\n        name: string,\r\n        required?: boolean,\r\n    },\r\n    options: Options[],\r\n}\r\n\r\nexport type MultiPicklist = {\r\n    select: {\r\n        name: string,\r\n        required?: boolean,\r\n    },\r\n    options: MultiOptions[],\r\n}\r\n\r\nexport type InputType = 'text' | 'number' | 'date'\r\nexport type Input<T extends InputType> = {\r\n    input: {\r\n        type:T,\r\n        name: string,\r\n        required?: boolean,\r\n        placeholder?: string,\r\n        disabled?: boolean,\r\n        maxlength?: number,\r\n    },\r\n    value?: T extends 'text'\r\n        ? string\r\n        : T extends 'number'\r\n        ? number\r\n        : T extends 'date'\r\n        ? DateForInput\r\n        : never,\r\n}\r\n\r\nexport type Textarea = {\r\n    textarea: {\r\n        name: string,\r\n        required?: boolean,\r\n        placeolder?: string,\r\n        rows?: number,\r\n        cols?: number,\r\n        disabled?: boolean,\r\n        maxlength?: number,\r\n    },\r\n}\r\n\r\n\r\ntype HandleChange = { handleChange?: any }\r\nexport type PicklistProps = Picklist & BaseColumnProps & HandleChange\r\nexport type MultiPicklistProps = MultiPicklist & BaseColumnProps & HandleChange\r\nexport type InputProps<T extends InputType> = Input<T> & BaseColumnProps & HandleChange\r\nexport type TextareaProps = Textarea & BaseColumnProps & HandleChange\r\n\r\ntype ColumnType = { type: 'input' | 'picklist' | 'multipicklist' |'textarea' }\r\nexport type Column = ( TextColumn | NumberColumn | DateColumn |PicklistColumn | MultiPicklistColumn | TextareaColumn );\r\nexport type TextColumn = InputProps<'text'> & ColumnType\r\nexport type NumberColumn = InputProps<'number'> & ColumnType\r\nexport type DateColumn = InputProps<'date'> & ColumnType\r\nexport type PicklistColumn = PicklistProps & ColumnType\r\nexport type MultiPicklistColumn = MultiPicklistProps & ColumnType\r\nexport type TextareaColumn = TextareaProps & ColumnType\r\n\r\ntype ColumnId = DiaryId\r\n\r\ndeclare const dateSymbol: unique symbol\r\nexport type DateForInput = string & { [dateSymbol]: never }\r\nexport const isDateForInput = (value: string): value is DateForInput => {\r\n    return /^[0-9]{4}\\-(0[1-9]|1[0-2])\\-(0[1-9]|[12][0-9]|3[01])$/.test(value);\r\n}"]},"metadata":{},"sourceType":"module"}