{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\klose\\\\workspace\\\\myfishing\\\\src\\\\page\\\\diary\\\\diaryView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { MFButton } from 'component/button/mf_button';\nimport { MFOutoPut } from 'component/column/output/mf_output';\nimport styled from \"styled-components\";\nimport { StyledWrapper, StyledOuter } from 'component/commonCSS/style';\nimport { testData } from 'testData';\nimport { order } from 'page/diary/dialyColumnOrder';\nimport { textColumns, numberColumns, picklistColumns, multiPicklistColumns, textareaColumns } from 'component/column/columns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DiaryView = () => {\n  _s();\n\n  const [orderedColumns, setOrderedColumns] = useState(); // const orderedColumns = useRef<Column[]>();\n  // ページ初期化\n\n  useEffect(() => {\n    (async () => {\n      console.log('@Diary View@');\n      console.log('useEffect start'); // 項目定義情報の取得\n\n      const columns = [...textColumns, ...numberColumns, ...picklistColumns, ...multiPicklistColumns, ...textareaColumns];\n      console.log('columns');\n      console.log(columns); // サーバーから初期値を取得 await\n      // サーバーからの値をrecordに注入\n\n      for (let c of columns) {\n        if (testData[c.id]) c.value = testData[c.id];\n      }\n\n      setOrderedColumns(sortColumns(order, columns));\n      console.log('orderedColumns');\n      console.log(orderedColumns);\n    })();\n  }, []);\n\n  const sortColumns = (order, columns) => {\n    const result = [];\n\n    for (let o of order) {\n      for (let c of columns) {\n        if (c.id === o) {\n          result.push(c);\n          break;\n        }\n      }\n    }\n\n    return result;\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledOuter, {\n    children: /*#__PURE__*/_jsxDEV(StyledWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(StyledContainer, {\n        children: orderedColumns === null || orderedColumns === void 0 ? void 0 : orderedColumns.map(oc => {\n          if (isInput(oc)) {\n            console.log('output');\n            return /*#__PURE__*/_jsxDEV(MFOutoPut, {\n              label: oc.label,\n              id: oc.id,\n              value: oc.value\n            }, oc.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 44\n            }, this);\n          } else if (isPickList(oc)) {\n            console.log('picklist');\n            return /*#__PURE__*/_jsxDEV(MFOutoPut, {\n              label: oc.label,\n              id: oc.id,\n              value: oc.value\n            }, oc.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 44\n            }, this);\n          } else if (isMultiPickList(oc)) {\n            console.log('multi');\n            return /*#__PURE__*/_jsxDEV(MFOutoPut, {\n              label: oc.label,\n              id: oc.id,\n              value: oc.value\n            }, oc.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 44\n            }, this);\n          } else if (isTextarea(oc)) {\n            console.log('textarea');\n            return /*#__PURE__*/_jsxDEV(MFOutoPut, {\n              label: oc.label,\n              id: oc.id,\n              value: oc.value\n            }, oc.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 44\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StyledButtonWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(StyledButtonContainer, {\n          children: /*#__PURE__*/_jsxDEV(MFButton, {\n            type: 'button',\n            disabled: false,\n            mode: 'positive',\n            children: \"\\u7DE8\\u96C6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StyledButtonContainer, {\n          children: /*#__PURE__*/_jsxDEV(MFButton, {\n            type: 'button',\n            disabled: false,\n            mode: 'negative',\n            children: \"\\u623B\\u308B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DiaryView, \"1oe6i4NalH4jL1UQ0204CQoXP9Q=\");\n\n_c = DiaryView;\n\nconst isInput = column => column.type === 'input';\n\nconst isPickList = column => column.type === 'picklist';\n\nconst isMultiPickList = column => column.type === 'multipicklist';\n\nconst isTextarea = column => column.type === 'textarea';\n\nconst StyledContainer = styled.div`\ndisplay: grid;\npadding-top: 100px;\ngrid-auto-rows: 150px;\ngrid-template-columns: 50% 50%;\n`;\n_c2 = StyledContainer;\nconst StyledButtonWrapper = styled.div`\nwidth: 30%;\nmargin: 0 auto;\nheight: 150px;\nalign-items: center;\njustify-content: center;\ndisplay: flex;\n`;\n_c3 = StyledButtonWrapper;\nconst StyledButtonContainer = styled.div`\nmargin: 0 10%;\n`;\n_c4 = StyledButtonContainer;\nexport default DiaryView;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"DiaryView\");\n$RefreshReg$(_c2, \"StyledContainer\");\n$RefreshReg$(_c3, \"StyledButtonWrapper\");\n$RefreshReg$(_c4, \"StyledButtonContainer\");","map":{"version":3,"sources":["C:/Users/klose/workspace/myfishing/src/page/diary/diaryView.tsx"],"names":["useEffect","useState","MFButton","MFOutoPut","styled","StyledWrapper","StyledOuter","testData","order","textColumns","numberColumns","picklistColumns","multiPicklistColumns","textareaColumns","DiaryView","orderedColumns","setOrderedColumns","console","log","columns","c","id","value","sortColumns","result","o","push","map","oc","isInput","label","isPickList","isMultiPickList","isTextarea","column","type","StyledContainer","div","StyledButtonWrapper","StyledButtonContainer"],"mappings":"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","sourcesContent":["import { useEffect, useState, VFC } from 'react';\r\nimport { MFButton } from 'component/button/mf_button';\r\nimport { MFOutoPut } from 'component/column/output/mf_output'\r\nimport styled from \"styled-components\";\r\nimport { StyledWrapper, StyledOuter } from 'component/commonCSS/style'\r\nimport { testData } from 'testData'\r\nimport { order } from 'page/diary/dialyColumnOrder'\r\nimport {\r\n    Column, \r\n    TextColumn, \r\n    NumberColumn, \r\n    PicklistColumn, \r\n    MultiPicklistColumn, \r\n    TextareaColumn, \r\n} from 'component/column/input/columnDef';\r\nimport {\r\n    textColumns, \r\n    numberColumns,\r\n    picklistColumns,\r\n    multiPicklistColumns,\r\n    textareaColumns\r\n} from 'component/column/columns';\r\n\r\nconst DiaryView: VFC = () => {\r\n    \r\n    const [orderedColumns, setOrderedColumns] = useState<Column[]>();\r\n\r\n    // const orderedColumns = useRef<Column[]>();\r\n\r\n    // ページ初期化\r\n    useEffect(()=> {       \r\n        (\r\n            async () => {\r\n                console.log('@Diary View@');\r\n                console.log('useEffect start');\r\n                // 項目定義情報の取得\r\n                const columns: Column[] = [...textColumns, ...numberColumns, ...picklistColumns, ...multiPicklistColumns, ...textareaColumns];\r\n                console.log('columns');\r\n                console.log(columns);\r\n                \r\n                // サーバーから初期値を取得 await\r\n\r\n                // サーバーからの値をrecordに注入\r\n                for(let c of columns){\r\n                    if(testData[c.id]) c.value = testData[c.id];\r\n                }\r\n\r\n                setOrderedColumns(sortColumns(order, columns));\r\n                console.log('orderedColumns');\r\n                console.log(orderedColumns);\r\n            })()\r\n    },[])\r\n    \r\n    const sortColumns = (order:string[], columns:Column[]):Column[] => {\r\n        const result: Column[] = [];\r\n        \r\n        for( let o of order ){\r\n            for(let c of columns){\r\n                if(c.id === o){\r\n                    result.push(c);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n    return (\r\n        <StyledOuter>\r\n            <StyledWrapper>\r\n                <StyledContainer>\r\n                    {orderedColumns?.map((oc)=>{\r\n                                if(isInput(oc)){\r\n                                    console.log('output');\r\n                                    return <MFOutoPut\r\n                                    label={oc.label}\r\n                                    id={oc.id}\r\n                                    key={oc.id}\r\n                                    value={oc.value}></MFOutoPut>\r\n                                }else if(isPickList(oc)){\r\n                                    console.log('picklist');\r\n                                    return <MFOutoPut\r\n                                    label={oc.label}\r\n                                    id={oc.id}\r\n                                    key={oc.id}\r\n                                    value={oc.value}></MFOutoPut>\r\n                                }else if(isMultiPickList(oc)){\r\n                                    console.log('multi');\r\n                                    return <MFOutoPut\r\n                                    label={oc.label}\r\n                                    id={oc.id}\r\n                                    key={oc.id}\r\n                                    value={oc.value}></MFOutoPut>\r\n                                }else if(isTextarea(oc)){\r\n                                    console.log('textarea');\r\n                                    return <MFOutoPut\r\n                                    label={oc.label}\r\n                                    id={oc.id}\r\n                                    key={oc.id}\r\n                                    value={oc.value}></MFOutoPut>\r\n                                }\r\n                            })}\r\n                </StyledContainer>\r\n                <StyledButtonWrapper>\r\n                    <StyledButtonContainer>\r\n                        <MFButton type={'button'} disabled={false} mode={'positive'}>編集</MFButton>\r\n                    </StyledButtonContainer>\r\n                    <StyledButtonContainer>\r\n                        <MFButton type={'button'} disabled={false} mode={'negative'}>戻る</MFButton>\r\n                    </StyledButtonContainer>\r\n                </StyledButtonWrapper>\r\n            </StyledWrapper>\r\n        </StyledOuter>\r\n    )\r\n}\r\n\r\n\r\nconst isInput = (column: Column): column is (TextColumn | NumberColumn) => column.type === 'input';\r\nconst isPickList = (column: Column): column is PicklistColumn => column.type === 'picklist';\r\nconst isMultiPickList = (column: Column): column is MultiPicklistColumn => column.type === 'multipicklist';\r\nconst isTextarea = (column: Column): column is TextareaColumn => column.type === 'textarea';\r\n\r\nconst StyledContainer =styled.div`\r\ndisplay: grid;\r\npadding-top: 100px;\r\ngrid-auto-rows: 150px;\r\ngrid-template-columns: 50% 50%;\r\n`;\r\n\r\nconst StyledButtonWrapper =styled.div`\r\nwidth: 30%;\r\nmargin: 0 auto;\r\nheight: 150px;\r\nalign-items: center;\r\njustify-content: center;\r\ndisplay: flex;\r\n`;\r\n\r\nconst StyledButtonContainer =styled.div`\r\nmargin: 0 10%;\r\n`;\r\n\r\nexport default DiaryView;"]},"metadata":{},"sourceType":"module"}