{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\klose\\\\workspace\\\\myfishing\\\\src\\\\component\\\\column\\\\mf_picklist.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MFPicklist = _ref => {\n  var _select$value, _select$multiple, _select$required;\n\n  let {\n    label,\n    id,\n    select,\n    options\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: id,\n      name: select.name,\n      value: (_select$value = select.value) !== null && _select$value !== void 0 ? _select$value : '',\n      multiple: (_select$multiple = select.multiple) !== null && _select$multiple !== void 0 ? _select$multiple : false,\n      required: (_select$required = select.required) !== null && _select$required !== void 0 ? _select$required : false,\n      children: options.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: o.value,\n        children: o.value\n      }, o.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = MFPicklist;\n\nvar _c;\n\n$RefreshReg$(_c, \"MFPicklist\");","map":{"version":3,"sources":["C:/Users/klose/workspace/myfishing/src/component/column/mf_picklist.tsx"],"names":["MFPicklist","label","id","select","options","name","value","multiple","required","map","o","text"],"mappings":";;;AAmBA,OAAO,MAAMA,UAA8B,GAAG,QAA8B;AAAA;;AAAA,MAA7B;AAACC,IAAAA,KAAD;AAAOC,IAAAA,EAAP;AAAUC,IAAAA,MAAV;AAAiBC,IAAAA;AAAjB,GAA6B;AACxE,sBACI;AAAA,4BACI;AAAO,MAAA,OAAO,EAAEF,EAAhB;AAAA,gBAAqBD;AAArB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACI,MAAA,EAAE,EAAEC,EADR;AAEI,MAAA,IAAI,EAAEC,MAAM,CAACE,IAFjB;AAGI,MAAA,KAAK,mBAAEF,MAAM,CAACG,KAAT,yDAAkB,EAH3B;AAII,MAAA,QAAQ,sBAAEH,MAAM,CAACI,QAAT,+DAAqB,KAJjC;AAKI,MAAA,QAAQ,sBAAEJ,MAAM,CAACK,QAAT,+DAAqB,KALjC;AAAA,gBAOKJ,OAAO,CAACK,GAAR,CAAaC,CAAD,iBACT;AAAQ,QAAA,KAAK,EAAEA,CAAC,CAACJ,KAAjB;AAAA,kBAAsCI,CAAC,CAACJ;AAAxC,SAA6BI,CAAC,CAACC,IAA/B;AAAA;AAAA;AAAA;AAAA,cADH;AAPL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAgBH,CAjBM;KAAMX,U","sourcesContent":["import { VFC } from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nexport type PicklistProps = {\r\n    label: string,\r\n    id: string,\r\n    type: 'picklist',\r\n    select: {\r\n        name: string,\r\n        multiple?: boolean,\r\n        required?: boolean,\r\n        value?: string,\r\n    },\r\n    options: {\r\n        value: string,\r\n        text: string,\r\n    }[],\r\n}\r\n\r\nexport const MFPicklist: VFC<PicklistProps> = ({label,id,select,options}) =>{\r\n    return(\r\n        <>\r\n            <label htmlFor={id}>{label}</label>\r\n            <select\r\n                id={id}\r\n                name={select.name}\r\n                value={select.value ?? ''}\r\n                multiple={select.multiple ?? false}\r\n                required={select.required ?? false}\r\n            >\r\n                {options.map((o)=>(\r\n                    <option value={o.value} key={o.text}>{o.value}</option>\r\n                    ))}\r\n            </select>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}