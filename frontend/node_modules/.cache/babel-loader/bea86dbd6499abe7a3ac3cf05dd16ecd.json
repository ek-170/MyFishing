{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\klose\\\\workspace\\\\myfishing\\\\src\\\\component\\\\form\\\\recordEntryForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { MFInput } from 'component/column/mf_input';\nimport { MFPicklist } from 'component/column/mf_picklist';\nimport { MFMultiPicklist } from 'component/column/mf_multipicklist';\nimport { MFTextarea } from 'component/column/mf_textarea';\nimport { MFButton } from 'component/button/mf_button';\nimport { textColumns, numberColumns, picklistColumns, multiPicklistColumns, textareaColumns } from 'component/column/columns';\nimport styled from \"styled-components\";\nimport { header, container } from 'const/size';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecordEntryForm = () => {\n  _s();\n\n  // 各項目のuseStateを宣言\n  const [place, setPlace] = useState('');\n  const [wind, setWind] = useState(0);\n  const [caughtFish, setCaughtFIsh] = useState(['']);\n  const [weather, setWeather] = useState('');\n  const [comment, setComment] = useState(''); // テストで初期値としてvalueを設定\n  // 実際はサーバから初期値を取得する\n\n  const record = [{\n    id: 'place',\n    value: place,\n    handleChange: setPlace\n  }, {\n    id: 'wind',\n    value: wind,\n    handleChange: setWind\n  }, {\n    id: 'caughtFish',\n    value: caughtFish,\n    handleChange: setCaughtFIsh\n  }, {\n    id: 'weather',\n    value: weather,\n    handleChange: setWeather\n  }, {\n    id: 'comment',\n    value: comment,\n    handleChange: setComment\n  }];\n  const [orderedColumns, setOrderedColumns] = useState(); // const orderedColumns = useRef<Column[]>(); これだと初期化処理内でcurrentに値を入れてもうまく項目が表示されない\n  // ページ初期化\n\n  useEffect(() => {\n    (async () => {\n      console.log('useEffect start'); // 項目定義情報の取得\n\n      const columns = [...textColumns, ...numberColumns, ...picklistColumns, ...multiPicklistColumns, ...textareaColumns]; // サーバーから初期値を取得\n\n      const testData = {\n        place: '大洗漁港',\n        wind: 5,\n        caughtFish: ['aji', 'kasago'],\n        weather: 'rainy',\n        comment: 'testtesttest'\n      }; // columnOrderの順に項目の並び替え\n\n      setOrderedColumns(sortColumns(record, columns));\n      console.log(orderedColumns); // 初期値を各項目にセット\n\n      console.log('★Start setState');\n      await setPlace(testData.place);\n      setWind(testData.wind);\n      setCaughtFIsh(testData.caughtFish);\n      setWeather(testData.weather);\n      setComment(testData.comment);\n      console.log('★Finish setState');\n    })();\n  }, []);\n\n  const submit = async e => {\n    console.log('★submit★');\n    e.preventDefault();\n    const data = {\n      place: place,\n      wind: wind,\n      caughtFish: caughtFish,\n      weather: weather,\n      comment: comment\n    };\n    console.log('data');\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledOuter, {\n    children: /*#__PURE__*/_jsxDEV(StyledWrapper, {\n      children: [console.log('Render!!'), /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        onSubmit: submit,\n        children: [/*#__PURE__*/_jsxDEV(StyledContainer, {\n          children: orderedColumns === null || orderedColumns === void 0 ? void 0 : orderedColumns.map(oc => {\n            if (isInput(oc)) {\n              console.log(oc.value);\n              return /*#__PURE__*/_jsxDEV(MFInput, {\n                label: oc.label,\n                id: oc.id,\n                input: oc.input,\n                value: oc.value,\n                handleChange: oc.handleChange\n              }, oc.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 48\n              }, this);\n            } else if (isPickList(oc)) {\n              console.log(oc.value);\n              return /*#__PURE__*/_jsxDEV(MFPicklist, {\n                label: oc.label,\n                id: oc.id,\n                select: oc.select,\n                options: oc.options,\n                value: oc.value,\n                handleChange: oc.handleChange\n              }, oc.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 48\n              }, this);\n            } else if (isMultiPickList(oc)) {\n              console.log(oc.value);\n              return /*#__PURE__*/_jsxDEV(MFMultiPicklist, {\n                label: oc.label,\n                id: oc.id,\n                select: oc.select,\n                options: oc.options,\n                value: oc.value,\n                handleChange: oc.handleChange\n              }, oc.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 48\n              }, this);\n            } else if (isTextarea(oc)) {\n              return /*#__PURE__*/_jsxDEV(MFTextarea, {\n                label: oc.label,\n                id: oc.id,\n                textarea: oc.textarea,\n                value: oc.value,\n                handleChange: oc.handleChange\n              }, oc.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 48\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MFButton, {\n          type: 'submit',\n          disabled: false,\n          mode: 'negative',\n          children: \"\\u4FDD\\u5B58\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RecordEntryForm, \"1qVTI9ubMOE0t/fzs0d0FBNMMUQ=\");\n\n_c = RecordEntryForm;\n\nconst sortColumns = (record, columns) => {\n  console.log('★Start sortColumns');\n  const orderedColumns = [];\n\n  for (let r of record) {\n    for (let c of columns) {\n      if (c.id === r.id) {\n        c.handleChange = r.handleChange;\n        c.value = r.value;\n        orderedColumns.push(c);\n        break;\n      }\n    }\n  }\n\n  console.log('★Finish sortColumns');\n  return orderedColumns;\n};\n\nconst isInput = column => column.type === 'input';\n\nconst isPickList = column => column.type === 'picklist';\n\nconst isMultiPickList = column => column.type === 'multipicklist';\n\nconst isTextarea = column => column.type === 'textarea';\n\nconst StyledOuter = styled.div`\nbackground-color: #eff0f0;\nwidth: 100vw;\nheight: 100vw;\n`;\n_c2 = StyledOuter;\nconst StyledWrapper = styled.div`\nmargin-top: ${header.height};\nwidth: ${container.WIDTH};\nheight: 100vw;\nmargin-left: auto;\nmargin-right: auto;\nbackground-color: #ffffff;\n`;\n_c3 = StyledWrapper;\nconst StyledContainer = styled.div`\ndisplay: grid;\npadding-top: 100px;\ngrid-auto-rows: 150px;\ngrid-template-columns: 50% 50%;\n`;\n_c4 = StyledContainer;\nexport default RecordEntryForm;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"RecordEntryForm\");\n$RefreshReg$(_c2, \"StyledOuter\");\n$RefreshReg$(_c3, \"StyledWrapper\");\n$RefreshReg$(_c4, \"StyledContainer\");","map":{"version":3,"sources":["C:/Users/klose/workspace/myfishing/src/component/form/recordEntryForm.tsx"],"names":["useEffect","useState","MFInput","MFPicklist","MFMultiPicklist","MFTextarea","MFButton","textColumns","numberColumns","picklistColumns","multiPicklistColumns","textareaColumns","styled","header","container","RecordEntryForm","place","setPlace","wind","setWind","caughtFish","setCaughtFIsh","weather","setWeather","comment","setComment","record","id","value","handleChange","orderedColumns","setOrderedColumns","console","log","columns","testData","sortColumns","submit","e","preventDefault","data","map","oc","isInput","label","input","isPickList","select","options","isMultiPickList","isTextarea","textarea","r","c","push","column","type","StyledOuter","div","StyledWrapper","height","WIDTH","StyledContainer"],"mappings":"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","sourcesContent":["import { useEffect, useState, VFC, SyntheticEvent } from 'react';\r\nimport { MFInput } from 'component/column/mf_input';\r\nimport { MFPicklist } from 'component/column/mf_picklist';\r\nimport { MFMultiPicklist } from 'component/column/mf_multipicklist';\r\nimport { MFTextarea } from 'component/column/mf_textarea';\r\nimport { MFButton } from 'component/button/mf_button';\r\nimport { Column, TextColumn, NumberColumn, PicklistColumn, MultiPicklistColumn, TextareaColumn, Record } from 'component/column/columnDef';\r\nimport { textColumns, numberColumns, picklistColumns, multiPicklistColumns, textareaColumns } from 'component/column/columns';\r\nimport styled from \"styled-components\";\r\nimport { header, container } from 'const/size';\r\n\r\nconst RecordEntryForm: VFC = () => {\r\n    // 各項目のuseStateを宣言\r\n    const [place, setPlace] = useState('');\r\n    const [wind, setWind] = useState(0);\r\n    const [caughtFish, setCaughtFIsh] = useState(['']);\r\n    const [weather, setWeather] = useState('');\r\n    const [comment, setComment] = useState('');\r\n\r\n    // テストで初期値としてvalueを設定\r\n    // 実際はサーバから初期値を取得する\r\n    const record: Record[] = [\r\n        {\r\n            id: 'place',\r\n            value: place,\r\n            handleChange: setPlace,\r\n        },\r\n        {\r\n            id: 'wind',\r\n            value: wind,\r\n            handleChange: setWind,\r\n        },\r\n        {\r\n            id: 'caughtFish',\r\n            value: caughtFish,\r\n            handleChange: setCaughtFIsh,\r\n        },\r\n        {\r\n            id: 'weather',\r\n            value: weather,\r\n            handleChange: setWeather,\r\n        },\r\n        {\r\n            id: 'comment',\r\n            value: comment,\r\n            handleChange: setComment,\r\n        },\r\n    ]\r\n\r\n    const [orderedColumns, setOrderedColumns] = useState<Column[]>();\r\n    // const orderedColumns = useRef<Column[]>(); これだと初期化処理内でcurrentに値を入れてもうまく項目が表示されない\r\n\r\n    // ページ初期化\r\n    useEffect(()=> {       \r\n        (\r\n            async () => {\r\n                console.log('useEffect start');\r\n                    // 項目定義情報の取得\r\n                    const columns: Column[] = [...textColumns, ...numberColumns, ...picklistColumns, ...multiPicklistColumns, ...textareaColumns];\r\n            \r\n                    // サーバーから初期値を取得\r\n                    const testData = {\r\n                        place: '大洗漁港',\r\n                        wind: 5,\r\n                        caughtFish: ['aji','kasago'],\r\n                        weather: 'rainy',\r\n                        comment: 'testtesttest'\r\n                    }\r\n                    \r\n                    // columnOrderの順に項目の並び替え\r\n                    setOrderedColumns(sortColumns(record, columns));\r\n                    console.log(orderedColumns);\r\n\r\n                    // 初期値を各項目にセット\r\n                    console.log('★Start setState')\r\n                    await setPlace(testData.place);\r\n                    setWind(testData.wind);\r\n                    setCaughtFIsh(testData.caughtFish);\r\n                    setWeather(testData.weather);\r\n                    setComment(testData.comment);\r\n                    console.log('★Finish setState')\r\n            })()\r\n        }\r\n    ,[])\r\n    \r\n    const submit =async (e: SyntheticEvent)=> {\r\n        console.log('★submit★');\r\n        e.preventDefault();\r\n        const data = {\r\n            place: place,\r\n            wind: wind,\r\n            caughtFish: caughtFish,\r\n            weather: weather,\r\n            comment: comment,\r\n        }\r\n        console.log('data');\r\n        console.log(data);\r\n    }\r\n\r\n    return (\r\n        <StyledOuter>\r\n            <StyledWrapper>\r\n                {console.log('Render!!')}\r\n                    <form method=\"post\" onSubmit={ submit } >\r\n                        <StyledContainer>\r\n                                {orderedColumns?.map((oc)=>{\r\n                                    if(isInput(oc)){\r\n                                        console.log(oc.value);\r\n                                        return <MFInput\r\n                                                    label={oc.label}\r\n                                                    id={oc.id}\r\n                                                    input={oc.input}\r\n                                                    key={oc.id}\r\n                                                    value={oc.value}\r\n                                                    handleChange={oc.handleChange}></MFInput>\r\n                                    }else if(isPickList(oc)){\r\n                                        console.log(oc.value);\r\n                                        return <MFPicklist\r\n                                                    label={oc.label}\r\n                                                    id={oc.id}\r\n                                                    select={oc.select}\r\n                                                    options={oc.options}\r\n                                                    key={oc.id}\r\n                                                    value={oc.value}\r\n                                                    handleChange={oc.handleChange}></MFPicklist>\r\n                                    }else if(isMultiPickList(oc)){\r\n                                        console.log(oc.value);\r\n                                        return <MFMultiPicklist\r\n                                                    label={oc.label}\r\n                                                    id={oc.id}\r\n                                                    select={oc.select}\r\n                                                    options={oc.options}\r\n                                                    key={oc.id}\r\n                                                    value={oc.value}\r\n                                                    handleChange={oc.handleChange}></MFMultiPicklist>\r\n                                    }else if(isTextarea(oc)){\r\n                                        return <MFTextarea\r\n                                                    label={oc.label}\r\n                                                    id={oc.id}\r\n                                                    textarea={oc.textarea}\r\n                                                    key={oc.id}\r\n                                                    value={oc.value}\r\n                                                    handleChange={oc.handleChange}></MFTextarea>\r\n                                    }\r\n                                })}\r\n                        </StyledContainer>\r\n                        <MFButton type={'submit'} disabled={false} mode={'negative'}>保存</MFButton>\r\n                    </form>\r\n            </StyledWrapper>\r\n        </StyledOuter>\r\n    )\r\n}\r\n\r\nconst sortColumns = (record:Record[], columns:Column[]):Column[] => {\r\n    console.log('★Start sortColumns')\r\n    const orderedColumns: Column[] = [];\r\n\r\n    for( let r of record ){\r\n        for(let c of columns){\r\n            if(c.id === r.id){\r\n                c.handleChange = r.handleChange;\r\n                c.value = r.value;\r\n                orderedColumns.push(c);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    console.log('★Finish sortColumns')\r\n\r\n    return orderedColumns;\r\n}\r\n\r\nconst isInput = (column: Column): column is (TextColumn | NumberColumn) => column.type === 'input';\r\nconst isPickList = (column: Column): column is PicklistColumn => column.type === 'picklist';\r\nconst isMultiPickList = (column: Column): column is MultiPicklistColumn => column.type === 'multipicklist';\r\nconst isTextarea = (column: Column): column is TextareaColumn => column.type === 'textarea';\r\n\r\nconst StyledOuter =styled.div`\r\nbackground-color: #eff0f0;\r\nwidth: 100vw;\r\nheight: 100vw;\r\n`;\r\n\r\nconst StyledWrapper =styled.div`\r\nmargin-top: ${header.height};\r\nwidth: ${container.WIDTH};\r\nheight: 100vw;\r\nmargin-left: auto;\r\nmargin-right: auto;\r\nbackground-color: #ffffff;\r\n`;\r\n\r\nconst StyledContainer =styled.div`\r\ndisplay: grid;\r\npadding-top: 100px;\r\ngrid-auto-rows: 150px;\r\ngrid-template-columns: 50% 50%;\r\n`;\r\n\r\nexport default RecordEntryForm;"]},"metadata":{},"sourceType":"module"}