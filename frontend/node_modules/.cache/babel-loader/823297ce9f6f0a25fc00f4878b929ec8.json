{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/klose/workspace/myfishing/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import styled from\"styled-components\";import{StyledItem,StyledLabel}from'commonCSS/style';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var MFMultiPicklist=function MFMultiPicklist(_ref){var _select$required;var label=_ref.label,id=_ref.id,select=_ref.select,value=_ref.value,options=_ref.options,handleChange=_ref.handleChange;return/*#__PURE__*/_jsxs(StyledItem,{children:[/*#__PURE__*/_jsx(StyledLabel,{htmlFor:id,children:label}),/*#__PURE__*/_jsx(StyledSelect,{id:id,name:select.name,multiple:true,defaultValue:value,required:(_select$required=select.required)!==null&&_select$required!==void 0?_select$required:false,onChange:function onChange(e){return handleChange(getValue(e.target.options));},children:options.map(function(o){return/*#__PURE__*/_jsx(\"option\",{value:o.value,children:o.text},o.value);})})]});};var getValue=function getValue(options){var values=[];for(var i=0;i<options.length;i++){if(options[i].selected)values.push(options[i].value);}return values;};var StyledSelect=styled.select(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\nwidth: 300px;\\nheight: auto;\\nborder-radius: 5px;\\nborder: 0.2px solid #9c9c9c;\\n\"])));","map":{"version":3,"sources":["C:/Users/klose/workspace/myfishing/frontend/src/component/column/input/mf_multipicklist.tsx"],"names":["styled","StyledItem","StyledLabel","MFMultiPicklist","label","id","select","value","options","handleChange","name","required","e","getValue","target","map","o","text","values","i","length","selected","push","StyledSelect"],"mappings":"sMACA,MAAOA,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,OAAQC,UAAR,CAAoBC,WAApB,KAAsC,iBAAtC,C,wFAEA,MAAO,IAAMC,CAAAA,eAAwC,CAAG,QAA3CA,CAAAA,eAA2C,MAAmD,yBAAjDC,CAAAA,KAAiD,MAAjDA,KAAiD,CAA3CC,EAA2C,MAA3CA,EAA2C,CAAxCC,MAAwC,MAAxCA,MAAwC,CAAjCC,KAAiC,MAAjCA,KAAiC,CAA1BC,OAA0B,MAA1BA,OAA0B,CAAjBC,YAAiB,MAAjBA,YAAiB,CACvG,mBACI,MAAC,UAAD,yBACI,KAAC,WAAD,EAAa,OAAO,CAAEJ,EAAtB,UAA2BD,KAA3B,EADJ,cAEI,KAAC,YAAD,EACI,EAAE,CAAEC,EADR,CAEI,IAAI,CAAEC,MAAM,CAACI,IAFjB,CAGI,QAAQ,KAHZ,CAII,YAAY,CAAEH,KAJlB,CAKI,QAAQ,mBAAED,MAAM,CAACK,QAAT,qDAAqB,KALjC,CAMI,QAAQ,CAAE,kBAAAC,CAAC,QAAIH,CAAAA,YAAY,CAACI,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASN,OAAV,CAAT,CAAhB,EANf,UAQKA,OAAO,CAACO,GAAR,CAAY,SAACC,CAAD,qBACT,eAAQ,KAAK,CAAEA,CAAC,CAACT,KAAjB,UAAuCS,CAAC,CAACC,IAAzC,EAA6BD,CAAC,CAACT,KAA/B,CADS,EAAZ,CARL,EAFJ,GADJ,CAiBH,CAlBM,CAoBP,GAAMM,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACL,OAAD,CAAmC,CAChD,GAAMU,CAAAA,MAAe,CAAG,EAAxB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAC,CAAX,CAAcA,CAAC,CAACX,OAAO,CAACY,MAAxB,CAAgCD,CAAC,EAAjC,CAAqC,CACjC,GAAGX,OAAO,CAACW,CAAD,CAAP,CAAWE,QAAd,CAAwBH,MAAM,CAACI,IAAP,CAAYd,OAAO,CAACW,CAAD,CAAP,CAAWZ,KAAvB,EAC3B,CACD,MAAOW,CAAAA,MAAP,CACH,CAND,CAQA,GAAMK,CAAAA,YAAY,CAAEvB,MAAM,CAACM,MAAT,oJAAlB","sourcesContent":["import { VFC } from 'react';\r\nimport styled from \"styled-components\";\r\nimport { MultiPicklistProps } from 'component/column/columnDef'\r\nimport {StyledItem, StyledLabel} from 'commonCSS/style';\r\n\r\nexport const MFMultiPicklist: VFC<MultiPicklistProps> = ({label,id,select,value, options, handleChange}) =>{\r\n    return(\r\n        <StyledItem>\r\n            <StyledLabel htmlFor={id}>{label}</StyledLabel>\r\n            <StyledSelect\r\n                id={id}\r\n                name={select.name}\r\n                multiple\r\n                defaultValue={value}\r\n                required={select.required ?? false}\r\n                onChange={e => handleChange(getValue(e.target.options))}\r\n            >\r\n                {options.map((o)=>(\r\n                    <option value={o.value} key={o.value}>{o.text}</option>\r\n                    ))}\r\n            </StyledSelect>\r\n        </StyledItem>\r\n    )\r\n}\r\n\r\nconst getValue = (options: HTMLOptionsCollection)=> {\r\n    const values:string[] = [];\r\n    for (let i=0; i<options.length; i++ ){\r\n        if(options[i].selected) values.push(options[i].value);\r\n    }\r\n    return values;\r\n}\r\n\r\nconst StyledSelect =styled.select`\r\nwidth: 300px;\r\nheight: auto;\r\nborder-radius: 5px;\r\nborder: 0.2px solid #9c9c9c;\r\n`;"]},"metadata":{},"sourceType":"module"}