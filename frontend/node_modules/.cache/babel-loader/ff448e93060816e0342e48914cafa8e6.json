{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\klose\\\\workspace\\\\myfishing\\\\src\\\\component\\\\column\\\\mf_textarea.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MFTextarea = _ref => {\n  var _textarea$required, _textarea$placeolder, _textarea$cols, _textarea$rows, _textarea$maxlength;\n\n  let {\n    label,\n    id,\n    textarea\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: id,\n      name: textarea.name,\n      value: textarea.value,\n      required: (_textarea$required = textarea.required) !== null && _textarea$required !== void 0 ? _textarea$required : false,\n      placeholder: (_textarea$placeolder = textarea.placeolder) !== null && _textarea$placeolder !== void 0 ? _textarea$placeolder : '',\n      cols: (_textarea$cols = textarea.cols) !== null && _textarea$cols !== void 0 ? _textarea$cols : 20,\n      rows: (_textarea$rows = textarea.rows) !== null && _textarea$rows !== void 0 ? _textarea$rows : undefined,\n      maxLength: (_textarea$maxlength = textarea.maxlength) !== null && _textarea$maxlength !== void 0 ? _textarea$maxlength : undefined\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_c = MFTextarea;\n\nvar _c;\n\n$RefreshReg$(_c, \"MFTextarea\");","map":{"version":3,"sources":["C:/Users/klose/workspace/myfishing/src/component/column/mf_textarea.tsx"],"names":["MFTextarea","label","id","textarea","name","value","required","placeolder","cols","rows","undefined","maxlength"],"mappings":";;;AAmBA,OAAO,MAAMA,UAA8B,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAACC,IAAAA,KAAD;AAAOC,IAAAA,EAAP;AAAUC,IAAAA;AAAV,GAAuB;AAClE,sBACI;AAAA,4BACI;AAAO,MAAA,OAAO,EAAED,EAAhB;AAAA,gBAAqBD;AAArB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEQ;AACI,MAAA,EAAE,EAAEC,EADR;AAEI,MAAA,IAAI,EAAEC,QAAQ,CAACC,IAFnB;AAGI,MAAA,KAAK,EAAED,QAAQ,CAACE,KAHpB;AAII,MAAA,QAAQ,wBAAEF,QAAQ,CAACG,QAAX,mEAAuB,KAJnC;AAKI,MAAA,WAAW,0BAAEH,QAAQ,CAACI,UAAX,uEAAyB,EALxC;AAMI,MAAA,IAAI,oBAAEJ,QAAQ,CAACK,IAAX,2DAAmB,EAN3B;AAOI,MAAA,IAAI,oBAAEL,QAAQ,CAACM,IAAX,2DAAmBC,SAP3B;AAQI,MAAA,SAAS,yBAAEP,QAAQ,CAACQ,SAAX,qEAAwBD;AARrC;AAAA;AAAA;AAAA;AAAA,YAFR;AAAA,kBADJ;AAgBH,CAjBM;KAAMV,U","sourcesContent":["import { VFC } from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nexport type TextareaProps = {\r\n    label: string,\r\n    id: string,\r\n    type: 'textarea',\r\n    textarea: {\r\n        name: string,\r\n        required?: boolean,\r\n        value?: string,\r\n        placeolder?: string,\r\n        rows?: number,\r\n        cols?: number,\r\n        disabled?: boolean,\r\n        maxlength?: number,\r\n    },\r\n}\r\n\r\nexport const MFTextarea: VFC<TextareaProps> = ({label,id,textarea}) =>{\r\n    return(\r\n        <>\r\n            <label htmlFor={id}>{label}</label>\r\n                <textarea\r\n                    id={id}\r\n                    name={textarea.name}\r\n                    value={textarea.value}\r\n                    required={textarea.required ?? false}\r\n                    placeholder={textarea.placeolder ?? ''}\r\n                    cols={textarea.cols ?? 20}\r\n                    rows={textarea.rows ?? undefined}\r\n                    maxLength={textarea.maxlength ?? undefined}\r\n                >\r\n                </textarea>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}