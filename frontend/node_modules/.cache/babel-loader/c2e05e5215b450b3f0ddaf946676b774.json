{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\klose\\\\workspace\\\\myfishing\\\\src\\\\page\\\\diary\\\\diaryEntry.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { MFInput } from 'component/column/input/mf_input';\nimport { MFPicklist } from 'component/column/input/mf_picklist';\nimport { MFMultiPicklist } from 'component/column/input/mf_multipicklist';\nimport { MFTextarea } from 'component/column/input/mf_textarea';\nimport { MFButton } from 'component/button/mf_button';\nimport { textColumns, numberColumns, picklistColumns, multiPicklistColumns, textareaColumns } from 'component/column/columns';\nimport styled from \"styled-components\";\nimport { StyledWrapper, StyledOuter } from 'component/commonCSS/style';\nimport { testData } from 'testData';\nimport { order } from 'page/diary/dialyColumnOrder';\nimport { ModalSppiner } from 'component/spinner/modalSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DiaryEntry = () => {\n  _s();\n\n  // 各項目のuseStateを宣言\n  const [place, setPlace] = useState('');\n  const [caughtFish, setCaughtFIsh] = useState(['']);\n  const [comment, setComment] = useState('');\n  const [rod, setRod] = useState(['']);\n  const [method, setMethod] = useState(['']);\n  const [lure, setLure] = useState(['']);\n  const [weather, setWeather] = useState('');\n  const [wind, setWind] = useState(0);\n  const [tide, setTide] = useState('');\n  const [orderedColumns, setOrderedColumns] = useState(); // const orderedColumns = useRef<Column[]>(); これだと初期化処理内でcurrentに値を入れてもうまく項目が表示されない\n\n  const [isLoad, setIsLoad] = useState(false); // ページ初期化\n\n  useEffect(() => {\n    (async () => {\n      var _testData$place, _testData$caughtFish, _testData$comment, _testData$rod, _testData$method, _testData$lure, _testData$weather, _testData$wind, _testData$tide;\n\n      console.log('useEffect start'); // 項目定義情報の取得\n\n      const columns = [...textColumns, ...numberColumns, ...picklistColumns, ...multiPicklistColumns, ...textareaColumns]; // ここから編集時のみの処理\n      // サーバーから初期値を取得 await\n      // サーバーからの値をrecordに注入\n\n      for (let c of columns) {\n        if (testData[c.id]) c.value = testData[c.id];\n      } // 初期値を各stateにセット\n\n\n      setPlace((_testData$place = testData.place) !== null && _testData$place !== void 0 ? _testData$place : '');\n      setCaughtFIsh((_testData$caughtFish = testData.caughtFish) !== null && _testData$caughtFish !== void 0 ? _testData$caughtFish : []);\n      setComment((_testData$comment = testData.comment) !== null && _testData$comment !== void 0 ? _testData$comment : '');\n      setRod((_testData$rod = testData.rod) !== null && _testData$rod !== void 0 ? _testData$rod : []);\n      setMethod((_testData$method = testData.method) !== null && _testData$method !== void 0 ? _testData$method : []);\n      setLure((_testData$lure = testData.lure) !== null && _testData$lure !== void 0 ? _testData$lure : []);\n      setWeather((_testData$weather = testData.weather) !== null && _testData$weather !== void 0 ? _testData$weather : '');\n      setWind((_testData$wind = testData.wind) !== null && _testData$wind !== void 0 ? _testData$wind : 0);\n      setTide((_testData$tide = testData.tide) !== null && _testData$tide !== void 0 ? _testData$tide : ''); //ここまで編集時のみの処理\n      // columnOrderの順に項目の並び替え\n\n      injectHandleChange(columns);\n      setOrderedColumns(sortColumns(order, columns));\n      console.log(orderedColumns);\n    })();\n  }, []);\n\n  const submit = async e => {\n    console.log('★submit★');\n    setIsLoad(true);\n    e.preventDefault();\n    const data = {\n      place: place,\n      caughtFish: caughtFish,\n      comment: comment,\n      rod: rod,\n      method: method,\n      lure: lure,\n      weather: weather,\n      wind: wind,\n      tide: tide\n    };\n    console.log('data');\n    console.log(data);\n  };\n\n  const sortColumns = (order, columns) => {\n    const result = [];\n\n    for (let o of order) {\n      for (let c of columns) {\n        if (c.id === o) {\n          result.push(c);\n          break;\n        }\n      }\n    }\n\n    return result;\n  };\n\n  const injectHandleChange = columns => {\n    for (let c of columns) {\n      if (c.id === 'place') c.handleChange = setPlace;\n      if (c.id === 'caughtFish') c.handleChange = setCaughtFIsh;\n      if (c.id === 'comment') c.handleChange = setComment;\n      if (c.id === 'rod') c.handleChange = setRod;\n      if (c.id === 'method') c.handleChange = setMethod;\n      if (c.id === 'lure') c.handleChange = setLure;\n      if (c.id === 'weather') c.handleChange = setWeather;\n      if (c.id === 'wind') c.handleChange = setWind;\n      if (c.id === 'tide') c.handleChange = setTide;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledOuter, {\n    children: [isLoad && /*#__PURE__*/_jsxDEV(ModalSppiner, {\n      height: 100,\n      width: 100,\n      show: isLoad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(StyledWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        onSubmit: submit,\n        children: /*#__PURE__*/_jsxDEV(StyledContainer, {\n          children: orderedColumns === null || orderedColumns === void 0 ? void 0 : orderedColumns.map(oc => {\n            if (isInput(oc)) {\n              console.log(oc.value);\n              return /*#__PURE__*/_jsxDEV(MFInput, {\n                label: oc.label,\n                id: oc.id,\n                input: oc.input,\n                value: oc.value,\n                handleChange: oc.handleChange\n              }, oc.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 44\n              }, this);\n            } else if (isPickList(oc)) {\n              console.log(oc.value);\n              return /*#__PURE__*/_jsxDEV(MFPicklist, {\n                label: oc.label,\n                id: oc.id,\n                select: oc.select,\n                options: oc.options,\n                value: oc.value,\n                handleChange: oc.handleChange\n              }, oc.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 44\n              }, this);\n            } else if (isMultiPickList(oc)) {\n              console.log(oc.value);\n              return /*#__PURE__*/_jsxDEV(MFMultiPicklist, {\n                label: oc.label,\n                id: oc.id,\n                select: oc.select,\n                options: oc.options,\n                value: oc.value,\n                handleChange: oc.handleChange\n              }, oc.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 44\n              }, this);\n            } else if (isTextarea(oc)) {\n              return /*#__PURE__*/_jsxDEV(MFTextarea, {\n                label: oc.label,\n                id: oc.id,\n                textarea: oc.textarea,\n                value: oc.value,\n                handleChange: oc.handleChange\n              }, oc.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 44\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StyledButtonWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(StyledButtonContainer, {\n          children: /*#__PURE__*/_jsxDEV(MFButton, {\n            type: 'submit',\n            disabled: false,\n            mode: 'positive',\n            hidden: false,\n            children: \"\\u4FDD\\u5B58\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(StyledButtonContainer, {\n          children: /*#__PURE__*/_jsxDEV(MFButton, {\n            type: 'button',\n            disabled: false,\n            mode: 'negative',\n            hidden: false,\n            children: \"\\u623B\\u308B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DiaryEntry, \"AjvNreKbJOstgwzesyu5u8uK808=\");\n\n_c = DiaryEntry;\n\nconst isInput = column => column.type === 'input';\n\nconst isPickList = column => column.type === 'picklist';\n\nconst isMultiPickList = column => column.type === 'multipicklist';\n\nconst isTextarea = column => column.type === 'textarea';\n\nconst StyledContainer = styled.div`\ndisplay: grid;\npadding-top: 100px;\ngrid-auto-rows: 150px;\ngrid-template-columns: 50% 50%;\n`;\n_c2 = StyledContainer;\nconst StyledButtonWrapper = styled.div`\nwidth: 30%;\nmargin: 0 auto;\nheight: 150px;\nalign-items: center;\njustify-content: center;\ndisplay: flex;\nz-index: 0;\n`;\n_c3 = StyledButtonWrapper;\nconst StyledButtonContainer = styled.div`\nmargin: 0 10%;\n`;\n_c4 = StyledButtonContainer;\nexport default DiaryEntry;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"DiaryEntry\");\n$RefreshReg$(_c2, \"StyledContainer\");\n$RefreshReg$(_c3, \"StyledButtonWrapper\");\n$RefreshReg$(_c4, \"StyledButtonContainer\");","map":{"version":3,"sources":["C:/Users/klose/workspace/myfishing/src/page/diary/diaryEntry.tsx"],"names":["useEffect","useState","MFInput","MFPicklist","MFMultiPicklist","MFTextarea","MFButton","textColumns","numberColumns","picklistColumns","multiPicklistColumns","textareaColumns","styled","StyledWrapper","StyledOuter","testData","order","ModalSppiner","DiaryEntry","place","setPlace","caughtFish","setCaughtFIsh","comment","setComment","rod","setRod","method","setMethod","lure","setLure","weather","setWeather","wind","setWind","tide","setTide","orderedColumns","setOrderedColumns","isLoad","setIsLoad","console","log","columns","c","id","value","injectHandleChange","sortColumns","submit","e","preventDefault","data","result","o","push","handleChange","map","oc","isInput","label","input","isPickList","select","options","isMultiPickList","isTextarea","textarea","column","type","StyledContainer","div","StyledButtonWrapper","StyledButtonContainer"],"mappings":"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","sourcesContent":["import { useEffect, useState, VFC, SyntheticEvent } from 'react';\r\nimport { MFInput } from 'component/column/input/mf_input';\r\nimport { MFPicklist } from 'component/column/input/mf_picklist';\r\nimport { MFMultiPicklist } from 'component/column/input/mf_multipicklist';\r\nimport { MFTextarea } from 'component/column/input/mf_textarea';\r\nimport { MFButton } from 'component/button/mf_button';\r\nimport {\r\n    Column, \r\n    TextColumn, \r\n    NumberColumn, \r\n    PicklistColumn, \r\n    MultiPicklistColumn, \r\n    TextareaColumn, \r\n} from 'component/column/input/columnDef';\r\nimport {\r\n    textColumns, \r\n    numberColumns,\r\n    picklistColumns,\r\n    multiPicklistColumns,\r\n    textareaColumns\r\n} from 'component/column/columns';\r\nimport styled from \"styled-components\";\r\nimport { StyledWrapper, StyledOuter } from 'component/commonCSS/style'\r\nimport { testData } from 'testData'\r\nimport { order } from 'page/diary/dialyColumnOrder'\r\nimport { ModalSppiner } from 'component/spinner/modalSpinner'\r\n\r\n\r\nconst DiaryEntry: VFC = () => {\r\n    // 各項目のuseStateを宣言\r\n    const [place, setPlace] = useState('');\r\n    const [caughtFish, setCaughtFIsh] = useState(['']);\r\n    const [comment, setComment] = useState('');\r\n    const [rod, setRod] = useState(['']);\r\n    const [method, setMethod] = useState(['']);\r\n    const [lure, setLure] = useState(['']);\r\n    const [weather, setWeather] = useState('');\r\n    const [wind, setWind] = useState(0);\r\n    const [tide, setTide] = useState('');\r\n\r\n    const [orderedColumns, setOrderedColumns] = useState<Column[]>();\r\n    // const orderedColumns = useRef<Column[]>(); これだと初期化処理内でcurrentに値を入れてもうまく項目が表示されない\r\n\r\n    const [isLoad, setIsLoad] = useState<boolean>(false);\r\n\r\n    // ページ初期化\r\n    useEffect(()=> {       \r\n        (\r\n            async () => {\r\n                console.log('useEffect start');\r\n                // 項目定義情報の取得\r\n                const columns: Column[] = [...textColumns, ...numberColumns, ...picklistColumns, ...multiPicklistColumns, ...textareaColumns];\r\n            \r\n                // ここから編集時のみの処理\r\n                    // サーバーから初期値を取得 await\r\n\r\n                    // サーバーからの値をrecordに注入\r\n                    for(let c of columns){\r\n                        if(testData[c.id]) c.value = testData[c.id];\r\n                    }\r\n\r\n                    // 初期値を各stateにセット\r\n                    setPlace(testData.place ?? '');\r\n                    setCaughtFIsh(testData.caughtFish ?? []);\r\n                    setComment(testData.comment ?? '');\r\n                    setRod(testData.rod ?? []);\r\n                    setMethod(testData.method ?? []);\r\n                    setLure(testData.lure ?? []);\r\n                    setWeather(testData.weather ?? '');\r\n                    setWind(testData.wind ?? 0);\r\n                    setTide(testData.tide ?? '');\r\n                //ここまで編集時のみの処理\r\n                \r\n                // columnOrderの順に項目の並び替え\r\n                injectHandleChange(columns);\r\n                setOrderedColumns(sortColumns(order, columns));\r\n                console.log(orderedColumns);\r\n            })()\r\n    },[])\r\n    \r\n    const submit =async (e: SyntheticEvent)=> {\r\n        console.log('★submit★');\r\n        setIsLoad(true);\r\n        e.preventDefault();\r\n        const data = {\r\n            place: place,\r\n            caughtFish: caughtFish,\r\n            comment: comment,\r\n            rod: rod,\r\n            method: method,\r\n            lure: lure,\r\n            weather: weather,\r\n            wind: wind,\r\n            tide: tide\r\n        }\r\n        console.log('data');\r\n        console.log(data);\r\n    }\r\n\r\n        \r\n    const sortColumns = (order:string[], columns:Column[]):Column[] => {\r\n        const result: Column[] = [];\r\n        \r\n        for( let o of order ){\r\n            for(let c of columns){\r\n                if(c.id === o){\r\n                    result.push(c);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const injectHandleChange = (columns:Column[]):void => {\r\n        for(let c of columns){\r\n            if(c.id === 'place') c.handleChange = setPlace;\r\n            if(c.id === 'caughtFish') c.handleChange = setCaughtFIsh;\r\n            if(c.id === 'comment') c.handleChange = setComment;\r\n            if(c.id === 'rod') c.handleChange = setRod;\r\n            if(c.id === 'method') c.handleChange = setMethod;\r\n            if(c.id === 'lure') c.handleChange = setLure;\r\n            if(c.id === 'weather') c.handleChange = setWeather;\r\n            if(c.id === 'wind') c.handleChange = setWind;\r\n            if(c.id === 'tide') c.handleChange = setTide;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <StyledOuter>\r\n            {isLoad && <ModalSppiner height={100} width={100} show={isLoad}/>}\r\n            <StyledWrapper>\r\n                <form method=\"post\" onSubmit={ submit } >\r\n                    <StyledContainer>\r\n                            {orderedColumns?.map((oc)=>{\r\n                                if(isInput(oc)){\r\n                                    console.log(oc.value);\r\n                                    return <MFInput\r\n                                                label={oc.label}\r\n                                                id={oc.id}\r\n                                                input={oc.input}\r\n                                                key={oc.id}\r\n                                                value={oc.value}\r\n                                                handleChange={oc.handleChange}></MFInput>\r\n                                }else if(isPickList(oc)){\r\n                                    console.log(oc.value);\r\n                                    return <MFPicklist\r\n                                                label={oc.label}\r\n                                                id={oc.id}\r\n                                                select={oc.select}\r\n                                                options={oc.options}\r\n                                                key={oc.id}\r\n                                                value={oc.value}\r\n                                                handleChange={oc.handleChange}></MFPicklist>\r\n                                }else if(isMultiPickList(oc)){\r\n                                    console.log(oc.value);\r\n                                    return <MFMultiPicklist\r\n                                                label={oc.label}\r\n                                                id={oc.id}\r\n                                                select={oc.select}\r\n                                                options={oc.options}\r\n                                                key={oc.id}\r\n                                                value={oc.value}\r\n                                                handleChange={oc.handleChange}></MFMultiPicklist>\r\n                                }else if(isTextarea(oc)){\r\n                                    return <MFTextarea\r\n                                                label={oc.label}\r\n                                                id={oc.id}\r\n                                                textarea={oc.textarea}\r\n                                                key={oc.id}\r\n                                                value={oc.value}\r\n                                                handleChange={oc.handleChange}></MFTextarea>\r\n                                }\r\n                            })}\r\n                    </StyledContainer>\r\n                </form>\r\n                    <StyledButtonWrapper>\r\n                        <StyledButtonContainer>\r\n                            <MFButton type={'submit'} disabled={false} mode={'positive'} hidden={false}>保存</MFButton>\r\n                        </StyledButtonContainer>\r\n                        <StyledButtonContainer>\r\n                            <MFButton type={'button'} disabled={false} mode={'negative'} hidden={false}>戻る</MFButton>\r\n                        </StyledButtonContainer>\r\n                    </StyledButtonWrapper>\r\n            </StyledWrapper>\r\n        </StyledOuter>\r\n    )\r\n}\r\n\r\n\r\nconst isInput = (column: Column): column is (TextColumn | NumberColumn) => column.type === 'input';\r\nconst isPickList = (column: Column): column is PicklistColumn => column.type === 'picklist';\r\nconst isMultiPickList = (column: Column): column is MultiPicklistColumn => column.type === 'multipicklist';\r\nconst isTextarea = (column: Column): column is TextareaColumn => column.type === 'textarea';\r\n\r\nconst StyledContainer =styled.div`\r\ndisplay: grid;\r\npadding-top: 100px;\r\ngrid-auto-rows: 150px;\r\ngrid-template-columns: 50% 50%;\r\n`;\r\n\r\nconst StyledButtonWrapper =styled.div`\r\nwidth: 30%;\r\nmargin: 0 auto;\r\nheight: 150px;\r\nalign-items: center;\r\njustify-content: center;\r\ndisplay: flex;\r\nz-index: 0;\r\n`;\r\n\r\nconst StyledButtonContainer =styled.div`\r\nmargin: 0 10%;\r\n`;\r\n\r\nexport default DiaryEntry;"]},"metadata":{},"sourceType":"module"}