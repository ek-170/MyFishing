{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\klose\\\\workspace\\\\myfishing\\\\src\\\\component\\\\column\\\\output\\\\mf_output.tsx\";\nimport styled from \"styled-components\";\nimport { StyledItem, StyledLabel } from 'commonCSS/style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MFOutoPut = _ref => {\n  let {\n    label,\n    id,\n    value\n  } = _ref;\n  value = isMultiPickList(value);\n  return /*#__PURE__*/_jsxDEV(StyledItem, {\n    children: [/*#__PURE__*/_jsxDEV(StyledLabel, {\n      id: id,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StyledValue, {\n      children: [\" \", value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = MFOutoPut;\n\nconst isMultiPickList = value => {\n  if (!Array.isArray(value)) {\n    return value;\n  }\n\n  let result = '';\n\n  for (let v of value) {\n    result = result + v + ',';\n  }\n\n  return result.slice(0, -1);\n};\n\nconst StyledValue = styled.div`\nmargin-top: 5px;\nwidth: 300px;\n`;\n_c2 = StyledValue;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MFOutoPut\");\n$RefreshReg$(_c2, \"StyledValue\");","map":{"version":3,"sources":["C:/Users/klose/workspace/myfishing/src/component/column/output/mf_output.tsx"],"names":["styled","StyledItem","StyledLabel","MFOutoPut","label","id","value","isMultiPickList","Array","isArray","result","v","slice","StyledValue","div"],"mappings":";AACA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,SAAQC,UAAR,EAAoBC,WAApB,QAAsC,iBAAtC;;AAGA,OAAO,MAAMC,SAA+B,GAAG,QAAuB;AAAA,MAAtB;AAACC,IAAAA,KAAD;AAAQC,IAAAA,EAAR;AAAYC,IAAAA;AAAZ,GAAsB;AAClEA,EAAAA,KAAK,GAAGC,eAAe,CAACD,KAAD,CAAvB;AACA,sBACI,QAAC,UAAD;AAAA,4BACI,QAAC,WAAD;AAAa,MAAA,EAAE,EAAED,EAAjB;AAAA,gBAAsBD;AAAtB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEQ,QAAC,WAAD;AAAA,sBAAgBE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CARM;KAAMH,S;;AAUb,MAAMI,eAAe,GAAID,KAAD,IAAuD;AAC3E,MAAI,CAACE,KAAK,CAACC,OAAN,CAAcH,KAAd,CAAL,EAA0B;AAAE,WAAOA,KAAP;AAAe;;AAE3C,MAAII,MAAa,GAAG,EAApB;;AACA,OAAI,IAAIC,CAAR,IAAaL,KAAb,EAAmB;AACfI,IAAAA,MAAM,GAAGA,MAAM,GAAGC,CAAT,GAAa,GAAtB;AACH;;AACD,SAAOD,MAAM,CAACE,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAP;AACH,CARD;;AAUA,MAAMC,WAAW,GAAEb,MAAM,CAACc,GAAI;AAC9B;AACA;AACA,CAHA;MAAMD,W","sourcesContent":["import { VFC } from 'react';\r\nimport styled from \"styled-components\";\r\nimport { BaseColumnProps } from 'component/column/columnDef'\r\nimport {StyledItem, StyledLabel} from 'commonCSS/style';\r\nimport { ValueType } from 'component/column/columnDef'\r\n\r\nexport const MFOutoPut: VFC<BaseColumnProps> = ({label, id, value}) =>{\r\n    value = isMultiPickList(value);\r\n    return(\r\n        <StyledItem>\r\n            <StyledLabel id={id}>{label}</StyledLabel>\r\n                <StyledValue> { value }</StyledValue>\r\n        </StyledItem>\r\n    )\r\n}\r\n\r\nconst isMultiPickList = (value:ValueType | undefined):ValueType | undefined => {\r\n    if( !Array.isArray(value)){ return value; }\r\n\r\n    let result:string = '';\r\n    for(let v of value){\r\n        result = result + v + ',';\r\n    }\r\n    return result.slice(0, -1);\r\n}\r\n\r\nconst StyledValue =styled.div`\r\nmargin-top: 5px;\r\nwidth: 300px;\r\n`;"]},"metadata":{},"sourceType":"module"}