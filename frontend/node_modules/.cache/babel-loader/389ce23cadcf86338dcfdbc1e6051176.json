{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\klose\\\\workspace\\\\myfishing\\\\src\\\\component\\\\column\\\\mf_multipicklist.tsx\";\nimport styled from \"styled-components\";\nimport character from 'const/character';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MFMultiPicklist = _ref => {\n  var _select$required;\n\n  let {\n    label,\n    id,\n    select,\n    value,\n    options,\n    handleChange\n  } = _ref;\n  console.log('★MFPicklist');\n  console.log('value');\n  console.log(value);\n  console.log('options');\n  console.log(options);\n  setDefaultValue(value, options);\n  return /*#__PURE__*/_jsxDEV(StyledItem, {\n    children: [/*#__PURE__*/_jsxDEV(StyledLabel, {\n      htmlFor: id,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StyledSelect, {\n      id: id,\n      name: select.name,\n      multiple: true,\n      required: (_select$required = select.required) !== null && _select$required !== void 0 ? _select$required : false,\n      onChange: e => handleChange(e.target.value),\n      children: options.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: o.value,\n        selected: o.selected,\n        children: o.value\n      }, o.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = MFMultiPicklist;\n\nconst setDefaultValue = (value, options) => {\n  // options.value と valueが一致する場合、options.selectedをtrueにする\n  if (!value === undefined) return;\n  value === null || value === void 0 ? void 0 : value.forEach(v => {\n    for (let o of options) {\n      if (o.value === v) o.selected = true;\n    }\n  });\n};\n\nconst StyledItem = styled.div`\nmargin-left: auto;\nmargin-right: auto;\nfont-family: ${character.FONT};\nfont-size:  ${character.SIZE.LARGE}px;\n`;\n_c2 = StyledItem;\nconst StyledLabel = styled.label`\ndisplay: inline-block;\nvertical-align: top;\ndisplay: flex;\nalign-items: center;\nheight: 40px\nborder: solid 5px #5250e0;\n`;\n_c3 = StyledLabel;\nconst StyledSelect = styled.select`\nwidth: 300px;\nheight: auto;\nborder-radius: 5px;\nborder: 0.2px solid #9c9c9c;\n`;\n_c4 = StyledSelect;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MFMultiPicklist\");\n$RefreshReg$(_c2, \"StyledItem\");\n$RefreshReg$(_c3, \"StyledLabel\");\n$RefreshReg$(_c4, \"StyledSelect\");","map":{"version":3,"sources":["C:/Users/klose/workspace/myfishing/src/component/column/mf_multipicklist.tsx"],"names":["styled","character","MFMultiPicklist","label","id","select","value","options","handleChange","console","log","setDefaultValue","name","required","e","target","map","o","selected","text","undefined","forEach","v","StyledItem","div","FONT","SIZE","LARGE","StyledLabel","StyledSelect"],"mappings":";AACA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAIA,OAAO,MAAMC,eAAwC,GAAG,QAAmD;AAAA;;AAAA,MAAlD;AAACC,IAAAA,KAAD;AAAOC,IAAAA,EAAP;AAAUC,IAAAA,MAAV;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA,OAAxB;AAAiCC,IAAAA;AAAjC,GAAkD;AACvGC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAI,EAAAA,eAAe,CAACL,KAAD,EAAQC,OAAR,CAAf;AAEA,sBACI,QAAC,UAAD;AAAA,4BACI,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEH,EAAtB;AAAA,gBAA2BD;AAA3B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AACI,MAAA,EAAE,EAAEC,EADR;AAEI,MAAA,IAAI,EAAEC,MAAM,CAACO,IAFjB;AAGI,MAAA,QAAQ,EAAE,IAHd;AAII,MAAA,QAAQ,sBAAEP,MAAM,CAACQ,QAAT,+DAAqB,KAJjC;AAKI,MAAA,QAAQ,EAAEC,CAAC,IAAIN,YAAY,CAACM,CAAC,CAACC,MAAF,CAAST,KAAV,CAL/B;AAAA,gBAOKC,OAAO,CAACS,GAAR,CAAaC,CAAD,iBACT;AAAQ,QAAA,KAAK,EAAEA,CAAC,CAACX,KAAjB;AAAqC,QAAA,QAAQ,EAAEW,CAAC,CAACC,QAAjD;AAAA,kBAA4DD,CAAC,CAACX;AAA9D,SAA6BW,CAAC,CAACE,IAA/B;AAAA;AAAA;AAAA;AAAA,cADH;AAPL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAxBM;KAAMjB,e;;AA0Bb,MAAMS,eAAe,GAAG,CAACL,KAAD,EAA8BC,OAA9B,KAAuD;AAC3E;AACA,MAAG,CAACD,KAAD,KAAWc,SAAd,EAAyB;AACzBd,EAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEe,OAAP,CAAeC,CAAC,IAAE;AACd,SAAI,IAAIL,CAAR,IAAaV,OAAb,EAAqB;AACjB,UAAGU,CAAC,CAACX,KAAF,KAAYgB,CAAf,EAAkBL,CAAC,CAACC,QAAF,GAAa,IAAb;AACrB;AACJ,GAJD;AAKH,CARD;;AAUA,MAAMK,UAAU,GAAEvB,MAAM,CAACwB,GAAI;AAC7B;AACA;AACA,eAAevB,SAAS,CAACwB,IAAK;AAC9B,cAAcxB,SAAS,CAACyB,IAAV,CAAeC,KAAM;AACnC,CALA;MAAMJ,U;AAON,MAAMK,WAAW,GAAE5B,MAAM,CAACG,KAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMyB,W;AASN,MAAMC,YAAY,GAAE7B,MAAM,CAACK,MAAO;AAClC;AACA;AACA;AACA;AACA,CALA;MAAMwB,Y","sourcesContent":["import { VFC } from 'react';\r\nimport styled from \"styled-components\";\r\nimport character from 'const/character';\r\nimport { MultiPicklistProps, MultiOptions } from 'component/column/columnDef'\r\n\r\n\r\nexport const MFMultiPicklist: VFC<MultiPicklistProps> = ({label,id,select,value, options, handleChange}) =>{\r\n    console.log('★MFPicklist')\r\n    console.log('value');\r\n    console.log(value);\r\n    console.log('options');\r\n    console.log(options);\r\n    setDefaultValue(value, options);\r\n\r\n    return(\r\n        <StyledItem>\r\n            <StyledLabel htmlFor={id}>{label}</StyledLabel>\r\n            <StyledSelect\r\n                id={id}\r\n                name={select.name}\r\n                multiple={true}\r\n                required={select.required ?? false}\r\n                onChange={e => handleChange(e.target.value)}\r\n            >\r\n                {options.map((o)=>(\r\n                    <option value={o.value} key={o.text} selected={o.selected}>{o.value}</option>\r\n                    ))}\r\n            </StyledSelect>\r\n        </StyledItem>\r\n    )\r\n}\r\n\r\nconst setDefaultValue = (value: string[] | undefined, options: MultiOptions)=> {\r\n    // options.value と valueが一致する場合、options.selectedをtrueにする\r\n    if(!value === undefined) return;\r\n    value?.forEach(v=>{\r\n        for(let o of options){\r\n            if(o.value === v) o.selected = true;\r\n        }\r\n    })\r\n}\r\n\r\nconst StyledItem =styled.div`\r\nmargin-left: auto;\r\nmargin-right: auto;\r\nfont-family: ${character.FONT};\r\nfont-size:  ${character.SIZE.LARGE}px;\r\n`;\r\n\r\nconst StyledLabel =styled.label`\r\ndisplay: inline-block;\r\nvertical-align: top;\r\ndisplay: flex;\r\nalign-items: center;\r\nheight: 40px\r\nborder: solid 5px #5250e0;\r\n`;\r\n\r\nconst StyledSelect =styled.select`\r\nwidth: 300px;\r\nheight: auto;\r\nborder-radius: 5px;\r\nborder: 0.2px solid #9c9c9c;\r\n`;"]},"metadata":{},"sourceType":"module"}